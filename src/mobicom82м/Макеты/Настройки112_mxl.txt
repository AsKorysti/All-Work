												
												
Параметр	Значение											
Компания	--											
Дистрибьютор	МобиКом											
Версия	2016.06.10											
Конфигурация	УТ111											
												
												
Имя раздела	Наименование	Выключено	Замещение	Таб.часть	Связка	Отбор	Тип объекта	Комментарий				
ref_firms	Фирмы		false			Организации	С	Организации				
ref_stores	Склады		false			Склады	С	Склады				
ref_employees	Сотрудники		false			Пользователи	С	ФизическиеЛица				
ref_cashregisters	Кассы	Х	false				С	Кассы				
ref_pricetypes	Типы цен		false			*ВидыЦен	С	ТипыЦенНоменклатуры				
ref_units	Единицы измерения (ОКЕИ)		false			*УпаковкиЕдиницыИзмерения	С	КлассификаторЕдиницИзмерения				
ref_buyers	Владельцы / покупатели		false			Контрагенты	С	Контрагенты				
ref_counteragents	Контрагенты / юр.лица / плательщики		false			*Контрагенты	С	Контрагенты				
ref_buypointtypes	Типы торговых точек	Х	false				С					
ref_buypoints	Торговые точки		false			*Партнеры	С	Контрагенты				
ref_agreements	Договора		false			*СоглашенияСКлиентами	С	ДоговорыКонтрагентов				
ref_agreementbuypoints	Обслуживаемые по договору ТТ		true				С					
ref_territories	Территории агентов		true				С					
ref_skugroups	Товарные группы		false			Номенклатура	С	Номенклатура				
ref_skus	Товары		false			Номенклатура	С	Номенклатура				
ref_skuunits	Единицы измерения товаров		true			*УпаковкиНоменклатуры	С	ЕдиницыИзмерения				
ref_skuimages	Изображения товаров		false				С					
ref_docstates	Статусы состояния документа	Х	false				С					
ref_paytypes	Типы оплаты	Х	false				С					
doc_invoices	(док) Продажи		false	doc_invoiceskus	invoice	*РеализацияТоваровУслуг	Д	РеализацияТоваровУслуг				
reg_rests	(рег) Остатки товаров		true				Р					
reg_debts	(рег) Задолженности		true				Р					
reg_prices	(рег) Цены товаров		true				Р	ЦеныНоменклатуры				
ref_discounts	(рег) Скидки	Х	true	ref_discountagreements,ref_discountbuyers,ref_discountbuypoints,ref_discountbuypointtypes	discount		Р					
												
Имя раздела	Наименование	Выключено	Замещение	Таб.часть	Связка	Отбор	Тип объекта	Комментарий				
doc_preorders	(док) Заявки		false	doc_preorderskus	preorder	ЗаказКлиента	Д	ЗаказПокупателя				
doc_receiptcashorders	(док) ПКО		false	doc_receiptcashorderitems	receiptcashorder	ПриходныйКассовыйОрдер	Д	ПриходныйКассовыйОрдер				
doc_goodsreturns	(док) Возвраты		false	doc_goodsreturnskus	goodsreturn	ВозвратТоваровОтКлиента	Д	ВозвратТоваровОтПокупателя				
ref_buyercensus	Новые владельцы	Х	false			Контрагенты	С					
ref_buypointcensus	Новые торг.точки	Х	false			Партнеры	С					
												
												
												
	Если в начале стоит * - реквизит не участвует в обмене	Если в начале стоит * - отбор по фильтру не используется										
												
Фирмы												
Мобиком	Источник	Ссылка	Описание		Запрос	Есть условие	Доп. при выгрузке	Доп. при загрузке				
name	Наименование		Наименование		"ВЫБРАТЬ
	Организации.Ссылка,
	Организации.Наименование,
//	Организации.Код,
	Организации.ПометкаУдаления,
	ЕСТЬNULL(ВложенныйЗапросАдрес.Представление, """") КАК Адрес,
	ЕСТЬNULL(ВложенныйЗапросТелефон.Представление, """") КАК Телефон,
	ИСТИНА КАК ПлательщикНДС,
	Организации.ИНН,
	Организации.КПП
ИЗ
	Справочник.Организации КАК Организации
		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			КонтактнаяИнформация.Представление КАК Представление,
			КонтактнаяИнформация.Ссылка КАК Объект
		ИЗ
			Справочник.Организации.КонтактнаяИнформация КАК КонтактнаяИнформация
		ГДЕ
			КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес)
			И КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ФактАдресОрганизации)) КАК ВложенныйЗапросАдрес
		ПО Организации.Ссылка = ВложенныйЗапросАдрес.Объект
		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			КонтактнаяИнформация.Представление КАК Представление,
			КонтактнаяИнформация.Ссылка КАК Объект
		ИЗ
			Справочник.Организации.КонтактнаяИнформация КАК КонтактнаяИнформация
		ГДЕ
			КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон)
			И КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонОрганизации)) КАК ВложенныйЗапросТелефон
		ПО Организации.Ссылка = ВложенныйЗапросТелефон.Объект"	0						
printcode	*Код		Код объекта									
deleted	ПометкаУдаления		Пометка на удаление									
address	Адрес		Адрес									
phone	Телефон		Телефон									
vatstatus	ПлательщикНДС		Плательщик НДС									
inn	ИНН		ИНН									
kpp	КПП		КПП									
												
												
Склады												
Мобиком	Источник	Ссылка	Описание		Запрос	Есть условие	Доп. при выгрузке	Доп. при загрузке				
name	Наименование		Наименование		"ВЫБРАТЬ
	Склады.Ссылка,
	Склады.Наименование,
//	Склады.Код,
	Склады.ПометкаУдаления
ИЗ
	Справочник.Склады КАК Склады
ГДЕ
	Склады.ЭтоГруппа = ЛОЖЬ"	1						
printcode	*Код		Код объекта									
deleted	ПометкаУдаления		Пометка на удаление									
												
												
Сотрудники												
Мобиком	Источник	Ссылка	Описание		Запрос	Есть условие	Доп. при выгрузке	Доп. при загрузке				
name	Наименование		Наименование		"ВЫБРАТЬ
	Пользователи.Ссылка,
	Пользователи.Наименование,
//	Пользователи.Код,
	Пользователи.ПометкаУдаления
ИЗ
	Справочник.Пользователи КАК Пользователи
ГДЕ
	Пользователи.Недействителен = ЛОЖЬ"	1						
printcode	*Код		Код объекта									
deleted	ПометкаУдаления		Пометка на удаление									
store	*Склад	ref_stores	Ссылка на склад		ВложенныйЗапросСклады.СтруктурнаяЕдиница							
firstname	*Имя		Имя									
lastname	*Фамилия		Фамилия									
middlename	*Отчество		Отчество									
inn			ИНН									
post			Должность									
phone			Телефон									
route			Номер маршрута									
startlatitude			Отправная точка движения по маршруту: широта									
startlongitude			Отправная точка движения по маршруту: долгота									
finishlatitude			Конечная точка движения по маршруту: широта									
finishlongitude			Конечная точка движения по маршруту: долгота									
plannedtrackweekcount			Число недель планируемого маршрута									
												
												
Кассы												
Мобиком	Источник	Ссылка	Описание		Запрос	Есть условие	Доп. при выгрузке	Доп. при загрузке				
name	Наименование		Наименование		"ВЫБРАТЬ
	Кассы.Ссылка,
	Кассы.Наименование,
//	Кассы.Код,
	Кассы.ПометкаУдаления,
	Кассы.Владелец КАК Организация
//	ЕСТЬNULL(ВложенныйЗапросКассы.ФизическоеЛицо, НЕОПРЕДЕЛЕНО) КАК ФизическоеЛицо
ИЗ
	Справочник.Кассы КАК Кассы
//		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
//			ОтветственныеЛицаСрезПоследних.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
//			ОтветственныеЛицаСрезПоследних.ФизическоеЛицо КАК ФизическоеЛицо
//		ИЗ
//			РегистрСведений.ОтветственныеЛица.СрезПоследних(&ДатаФормирования, ) КАК ОтветственныеЛицаСрезПоследних
//		ГДЕ
//			ТИПЗНАЧЕНИЯ(ОтветственныеЛицаСрезПоследних.СтруктурнаяЕдиница) = ТИП(Справочник.Склады)) КАК ВложенныйЗапросКассы
//		ПО Кассы.Ссылка = ВложенныйЗапросКассы.СтруктурнаяЕдиница"	0						
printcode	*Код		Код объекта									
deleted	ПометкаУдаления		Пометка на удаление									
firm	Организация	ref_firms	Ссылка на собственную фирму		Кассы.Владелец							
employee	*ФизическоеЛицо	ref_employees	Ссылка на сотрудника		ВложенныйЗапросКассы.ФизическоеЛицо,							
store		*ref_stores	Ссылка на склад									
												
												
Типы цен												
Мобиком	Источник	Ссылка	Описание		Запрос	Есть условие	Доп. при выгрузке	Доп. при загрузке				
name	Наименование		Наименование		"ВЫБРАТЬ
	ТипыЦенНоменклатуры.Ссылка,
	ТипыЦенНоменклатуры.Наименование,
	ТипыЦенНоменклатуры.ПометкаУдаления,
	ТипыЦенНоменклатуры.СпособЗаданияЦены,
	ТипыЦенНоменклатуры.Формула КАК АлгоритмРасчетаЦены,
	ТипыЦенНоменклатуры.Идентификатор,
	ТипыЦенНоменклатуры.ИспользоватьПриПродаже,
	ТипыЦенНоменклатуры.БазовыйВидЦены КАК БазовыйТипЦен,
	ТипыЦенНоменклатуры.Наценка
ИЗ
	Справочник.ВидыЦен КАК ТипыЦенНоменклатуры"	1	"// парсим формулы
Для Каждого стрДоп Из лОбъекты Цикл
	Если стрДоп.СпособЗаданияЦены = Перечисления.СпособыЗаданияЦен.Вручную ИЛИ
		стрДоп.СпособЗаданияЦены = Перечисления.СпособыЗаданияЦен.ЗаполнятьПоДаннымИБ ИЛИ
		стрДоп.СпособЗаданияЦены = Перечисления.СпособыЗаданияЦен.ЗаполнятьПоДаннымИБПриПоступлении Тогда
			// на всякий случай обнуляем данные
			стрДоп.БазовыйТипЦен = Неопределено;
			стрДоп.Наценка = 0;
			Продолжить;
	КонецЕсли;
	Если стрДоп.СпособЗаданияЦены = Перечисления.СпособыЗаданияЦен.НаценкаНаДругойВидЦен Тогда
		// ""метим"" базовую цену
		стрБазоваяЦена = лОбъекты.Найти(стрДоп.БазовыйТипЦен,""Ссылка"");
		стрБазоваяЦена.ИспользоватьПриПродаже = Истина;
		Продолжить;
	КонецЕсли;
	
	Если СтрЧислоВхождений(стрДоп.АлгоритмРасчетаЦены,""["")<>1 Тогда
		СообщитьПодробно(""Не удалось обработать формулу '""+стрДоп.АлгоритмРасчетаЦены+""' в ""+стрДоп.Наименование, СтатусСообщения.Важное, Истина, Ложь);
		Продолжить;
	КонецЕсли;
	
	позНач = Найти(стрДоп.АлгоритмРасчетаЦены,""["");
	позКон = Найти(стрДоп.АлгоритмРасчетаЦены,""]"");
	лИдентификаторБазовойЦены = Сред(стрДоп.АлгоритмРасчетаЦены, позНач+1, позКон-ПозНач-1);
	
	стрБазоваяЦена = лОбъекты.Найти(лИдентификаторБазовойЦены,""Идентификатор"");
	Если стрБазоваяЦена=Неопределено Тогда
		СообщитьПодробно(""Для ""+стрДоп.Наименование+"" базовая цена не входит в список выгружаемых"", СтатусСообщения.Важное, Истина, Ложь);
		Продолжить;
	Иначе
		стрБазоваяЦена.ИспользоватьПриПродаже = Истина;
	КонецЕсли;
	лОстатокФормулы = СокрЛП(СтрЗаменить(стрДоп.АлгоритмРасчетаЦены, ""[""+лИдентификаторБазовойЦены+""]"",""""));
	
	Если Лев(лОстатокФормулы,1)=""*"" Тогда
		лКоэффициент = СокрЛП(Сред(лОстатокФормулы,2));
	ИначеЕсли Прав(лОстатокФормулы,1)=""*"" Тогда
		лКоэффициент = СокрЛП(Сред(лОстатокФормулы,1,СтрДлина(лОстатокФормулы)-1));
	Иначе
		СообщитьПодробно(""Не удалось обработать формулу '""+стрДоп.АлгоритмРасчетаЦены+""' в ""+стрДоп.Наименование, СтатусСообщения.Важное, Истина, Ложь);
		Продолжить;
	КонецЕсли;
	
	Попытка
		лКоэффициент = Число(лКоэффициент);
	Исключение
		СообщитьПодробно(""Не удалось обработать формулу '""+стрДоп.АлгоритмРасчетаЦены+""' в ""+стрДоп.Наименование, СтатусСообщения.Важное, Истина, Ложь);
		Продолжить;
	КонецПопытки;
	
	стрДоп.БазовыйТипЦен = стрБазоваяЦена.Ссылка;
	стрДоп.Наценка = (лКоэффициент-1)*100;
КонецЦикла;

мСтрДоп = лОбъекты.НайтиСтроки(Новый Структура(""ИспользоватьПриПродаже"",Ложь));
Для Каждого стрДоп Из мСтрДоп Цикл
	лОбъекты.Удалить(стрДоп);
КонецЦикла;

// сортируем типы цен
лОбъекты.Колонки.Добавить(""Представление"");
Для Каждого стрДоп Из лОбъекты Цикл
	лТЦ = стрДоп;
	лПредставление = """";
	Пока ЗначениеЗаполнено(лТЦ.БазовыйТипЦен) Цикл
		лТЦСсылка = лТЦ.БазовыйТипЦен;
		лТЦ = лОбъекты.Найти(лТЦСсылка,""Ссылка"");
		лПредставление = лТЦ.Наименование+""\""+лПредставление;
	КонецЦикла;
	стрДоп.Представление = лПредставление + стрДоп.Наименование;
КонецЦикла;
лОбъекты.Сортировать(""Представление"");"					
printcode	*Код		Код объекта									
deleted	ПометкаУдаления		Пометка на удаление									
parentpricetype	БазовыйТипЦен	*ref_pricetypes	Ссылка на базовый тип цены									
extrarate	Наценка		Процент наценки на цену базового типа									
												
												
Единицы измерения (ОКЕИ)												
Мобиком	Источник	Ссылка	Описание		Запрос	Есть условие	Доп. при выгрузке	Доп. при загрузке				
name	Наименование		Наименование		"ВЫБРАТЬ
	УпаковкиЕдиницыИзмерения.Ссылка КАК Ссылка,
	УпаковкиЕдиницыИзмерения.НаименованиеПолное КАК Наименование,
	УпаковкиЕдиницыИзмерения.Код КАК Код,
	УпаковкиЕдиницыИзмерения.ПометкаУдаления КАК ПометкаУдаления,
	УпаковкиЕдиницыИзмерения.Наименование КАК КраткоеНаименование
ИЗ
	Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
ГДЕ
	УпаковкиЕдиницыИзмерения.Владелец = ЗНАЧЕНИЕ(Справочник.НаборыУпаковок.БазовыеЕдиницыИзмерения)"	0						
printcode	Код		Код объекта									
deleted	ПометкаУдаления		Пометка на удаление									
shortname	КраткоеНаименование		Короткое наименование									
												
												
Владельцы / покупатели												
Мобиком	Источник	Ссылка	Описание		Запрос	Есть условие	Доп. при выгрузке	Доп. при загрузке				
name	Наименование		Наименование		"ВЫБРАТЬ
	Контрагенты.Ссылка,
	Контрагенты.Наименование,
//	Контрагенты.Код,
	Контрагенты.ПометкаУдаления,
//	ВЫБОР
//		КОГДА Контрагенты.ОсновнойДоговорКонтрагента.ТипЦен ССЫЛКА Справочник.ТипыЦенНоменклатуры
//			ТОГДА Контрагенты.ОсновнойДоговорКонтрагента.ТипЦен
//		КОГДА Контрагенты.ОсновнойДоговорКонтрагента.ТипЦен ССЫЛКА Справочник.ТипыЦенНоменклатурыКонтрагентов
//			ТОГДА Контрагенты.ОсновнойДоговорКонтрагента.ТипЦен.ТипЦеныНоменклатуры
//		ИНАЧЕ НЕОПРЕДЕЛЕНО
//	КОНЕЦ КАК ТипЦен,
	ЕСТЬNULL(ВложенныйЗапросАдрес.Представление, """") КАК Адрес,
	ЕСТЬNULL(ВложенныйЗапросТелефон.Представление, """") КАК Телефон
//	ЕСТЬNULL(Контрагенты.ОсновноеКонтактноеЛицо.Наименование, """") КАК КонтактноеЛицо,
//	ЕСТЬNULL(Контрагенты.ОсновнойДоговорКонтрагента.КонтролироватьЧислоДнейЗадолженности, ЛОЖЬ) КАК КонтролироватьЧислоДнейЗадолженности,
//	ЕСТЬNULL(Контрагенты.ОсновнойДоговорКонтрагента.ВалютаВзаиморасчетов, НЕОПРЕДЕЛЕНО) КАК ВалютаВзаиморасчетов,
//	ЕСТЬNULL(Контрагенты.ОсновнойДоговорКонтрагента.ДопустимаяСуммаЗадолженности, 0) КАК ДопустимаяСуммаЗадолженности,
//	ЕСТЬNULL(Контрагенты.ОсновнойДоговорКонтрагента.ДопустимоеЧислоДнейЗадолженности, 0) КАК ДопустимоеЧислоДнейЗадолженности
ИЗ
	Справочник.Контрагенты КАК Контрагенты
		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			КонтактнаяИнформация.Представление КАК Представление,
			КонтактнаяИнформация.Ссылка КАК Объект
		ИЗ
			Справочник.Контрагенты.КонтактнаяИнформация КАК КонтактнаяИнформация
		ГДЕ
			КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес)
			И КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ФактАдресКонтрагента)) КАК ВложенныйЗапросАдрес
		ПО Контрагенты.Ссылка = ВложенныйЗапросАдрес.Объект
		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			КонтактнаяИнформация.Представление КАК Представление,
			КонтактнаяИнформация.Ссылка КАК Объект
		ИЗ
			Справочник.Контрагенты.КонтактнаяИнформация КАК КонтактнаяИнформация
		ГДЕ
			КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон)
			И КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонКонтрагента)) КАК ВложенныйЗапросТелефон
		ПО Контрагенты.Ссылка = ВложенныйЗапросТелефон.Объект
ГДЕ
	Контрагенты.Партнер.Клиент = ИСТИНА"	1						
printcode	*Код		Код объекта									
deleted	ПометкаУдаления		Пометка на удаление									
store		ref_stores	Ссылка на склад отгрузки									
pricetype	*ТипЦен	*ref_pricetypes	Ссылка на тип цен		Контрагенты.ОсновнойДоговорКонтрагента.ТипЦен							
address	Адрес		Адрес									
phone	Телефон		Телефон									
contact	*КонтактноеЛицо		Контактное лицо									
canexceedlimit	*КонтролироватьЧислоДнейЗадолженности		Признак разрешения превышать срок кредита									
creditlimit	*ДопустимаяСуммаЗадолженности		Ограничение суммы кредита в основной валюте									
creditdeadline	*ДопустимоеЧислоДнейЗадолженности		Ограничение глубины кредита в днях									
maxorderamount			Ограничение максимальной сумма заказа									
minorderamount			Ограничение минимальной сумма заказа									
maxdiscount			Ограничение максимального процента скидки									
mindiscount			Ограничение минимального процента скидки									
												
												
Контрагенты / юр.лица / плательщики												
Мобиком	Источник	Ссылка	Описание		Запрос	Есть условие	Доп. при выгрузке	Доп. при загрузке				
name	Наименование		Наименование		"ВЫБРАТЬ
	Контрагенты.Ссылка,
	Контрагенты.Наименование,
//	Контрагенты.Код,
	Контрагенты.ПометкаУдаления,
	Контрагенты.Ссылка КАК Покупатель,
	ЕСТЬNULL(ВложенныйЗапросАдрес.Представление, """") КАК Адрес,
	ЕСТЬNULL(ВложенныйЗапросТелефон.Представление, """") КАК Телефон,
	ВЫБОР
		КОГДА Контрагенты.ЮридическоеФизическоеЛицо = ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо)
			ТОГДА ИСТИНА
		ИНАЧЕ ЛОЖЬ
	КОНЕЦ КАК ЮрЛицо,
	Контрагенты.ИНН,
	Контрагенты.КПП,
//	""р/с "" + ЕСТЬNULL(Контрагенты.ОсновнойБанковскийСчет.НомерСчета, ""--"") + "", "" + ""в банке "" + ЕСТЬNULL(Контрагенты.ОсновнойБанковскийСчет.Банк.Наименование, ""--"") + "", "" + ""БИК "" + ЕСТЬNULL(Контрагенты.ОсновнойБанковскийСчет.Банк.Код, ""--"") + "", "" + ""к/с "" + ЕСТЬNULL(Контрагенты.ОсновнойБанковскийСчет.Банк.КоррСчет, ""--"") КАК БанкРеквизиты,
	Контрагенты.КодПоОКПО КАК ОКПО
ИЗ
	Справочник.Контрагенты КАК Контрагенты
		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			КонтактнаяИнформация.Представление КАК Представление,
			КонтактнаяИнформация.Ссылка КАК Объект
		ИЗ
			Справочник.Контрагенты.КонтактнаяИнформация КАК КонтактнаяИнформация
		ГДЕ
			КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес)
			И КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ФактАдресКонтрагента)) КАК ВложенныйЗапросАдрес
		ПО Контрагенты.Ссылка = ВложенныйЗапросАдрес.Объект
		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			КонтактнаяИнформация.Представление КАК Представление,
			КонтактнаяИнформация.Ссылка КАК Объект
		ИЗ
			Справочник.Контрагенты.КонтактнаяИнформация КАК КонтактнаяИнформация
		ГДЕ
			КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон)
			И КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонКонтрагента)) КАК ВложенныйЗапросТелефон
		ПО Контрагенты.Ссылка = ВложенныйЗапросТелефон.Объект"	0						
printcode	*Код		Код объекта									
deleted	ПометкаУдаления		Пометка на удаление									
buyer	Покупатель	ref_buyers	Ссылка на владельца / покупателя		Контрагенты.Ссылка							
address	Адрес		Адрес									
phone	Телефон		Телефон									
vatstatus			Плательщик НДС									
juridical	ЮрЛицо		Признак юридического лица									
inn	ИНН		ИНН									
kpp	КПП		КПП									
bank	*БанкРеквизиты		Банковские реквизиты									
okpo	ОКПО		ОКПО									
												
												
Типы торговых точек												
Мобиком	Источник	Ссылка	Описание		Запрос	Есть условие	Доп. при выгрузке	Доп. при загрузке				
name	ПолноеНаименование		Наименование		"ВЫБРАТЬ
	Контрагенты.Ссылка КАК Ссылка,
	Контрагенты.Код,
	Контрагенты.ЭтоГруппа,
	Контрагенты.ПометкаУдаления
ИЗ
	Справочник.Контрагенты КАК Контрагенты
<ГДЕ ?>
ИТОГИ ПО
	Ссылка ТОЛЬКО ИЕРАРХИЯ"	0	"//полные имена групп
лОбъекты.Колонки.Добавить(""ПолноеНаименование"");
колстр = лОбъекты.Количество();
Для Инд=1 По колстр Цикл
	стрДоп=лОбъекты.Получить(колстр-Инд);
	Если ЗначениеЗаполнено(стрДоп.Ссылка) Тогда
		Если стрДоп.ЭтоГруппа Тогда
			стрДоп.ПолноеНаименование = стрДоп.Ссылка.ПолноеНаименование();
		Иначе
			лОбъекты.Удалить(стрДоп);
		КонецЕсли;
	Иначе
		лОбъекты.Удалить(стрДоп);
	КонецЕсли;
КонецЦикла;
лОбъекты.Свернуть(""Ссылка,ПолноеНаименование,Код,ПометкаУдаления"");
лОбъекты.Сортировать(""ПолноеНаименование"");"					
printcode	Код		Код объекта									
deleted	ПометкаУдаления		Пометка на удаление									
	#	ref_buyers			Контрагенты.Ссылка							
												
												
Торговые точки			"типовой" механизм связи партнера и контрагента в ПартнерыИКонтрагенты.ПолучитьКонтрагентаПартнераПоУмолчанию, но для одного партнера за раз									
Мобиком	Источник	Ссылка	Описание		Запрос	Есть условие	Доп. при выгрузке	Доп. при загрузке				
name	Наименование		Наименование		"ВЫБРАТЬ РАЗЛИЧНЫЕ
	Партнеры.Ссылка КАК Ссылка,
	Партнеры.Код КАК Код,
	Партнеры.Наименование КАК Наименование,
	Партнеры.ПометкаУдаления КАК ПометкаУдаления,
	Партнеры.НаименованиеПолное КАК НаименованиеПолное,
	Контрагенты.Ссылка КАК Покупатель
ИЗ
	Справочник.Контрагенты КАК Контрагенты
		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Партнеры КАК Партнеры
		ПО Контрагенты.Партнер = Партнеры.Ссылка
ГДЕ
	Партнеры.Клиент = ИСТИНА
//	И Партнеры.ОбслуживаетсяТорговымиПредставителями = ИСТИНА"	1	"//дополняем список

лОбъекты.Сортировать(""Ссылка Возр""); // сортируем по партнерам
лОбъекты.Колонки.Добавить(""Адрес"");
лОбъекты.Колонки.Добавить(""Телефон"");
											
// второй запрос, ищем детей найденных партнеров
Запрос2 = Новый Запрос;
Запрос2.Текст=
""ВЫБРАТЬ РАЗЛИЧНЫЕ
|	Партнеры.Ссылка КАК Ссылка,
|	Партнеры.Родитель,
|	МАКСИМУМ(ПартнерАдрес.Представление) КАК Адрес,
|	МАКСИМУМ(ПартнерТелефон.Представление) КАК Телефон,
|	Партнеры.Код КАК Код,
|	Партнеры.Наименование КАК Наименование,
|	Партнеры.ПометкаУдаления КАК ПометкаУдаления,
|	Партнеры.НаименованиеПолное КАК НаименованиеПолное,
|	Контрагенты.Ссылка КАК Покупатель
|ИЗ
|	Справочник.Партнеры КАК Партнеры
|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
|		ПО (Контрагенты.Партнер = Партнеры.Ссылка)
|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Партнеры.КонтактнаяИнформация КАК ПартнерАдрес
|		ПО (ПартнерАдрес.Ссылка = Партнеры.Ссылка)
|			И (ПартнерАдрес.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресПартнера))
|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Партнеры.КонтактнаяИнформация КАК ПартнерТелефон
|		ПО (ПартнерТелефон.Ссылка = Партнеры.Ссылка)
|			И (ПартнерТелефон.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонПартнера))
|ГДЕ
|	Партнеры.Ссылка В ИЕРАРХИИ(&спПартнеры)
|	И Партнеры.Клиент = ИСТИНА
//|	И Партнеры.ОбслуживаетсяТорговымиПредставителями = ИСТИНА
|
|СГРУППИРОВАТЬ ПО
|	Партнеры.Ссылка,
|	Контрагенты.Ссылка,
|	Партнеры.Родитель"";
Запрос2.УстановитьПараметр(""спПартнеры"", лОбъекты.ВыгрузитьКолонку(""Ссылка""));

тзн = Запрос2.Выполнить().Выгрузить();
тзн.Сортировать(""Ссылка Возр""); // сортируем по партнерам

лПоискАдрес = Новый Структура(""Ссылка,Покупатель"");
лПоискТТ = Новый Структура(""Родитель,Покупатель"");
лПоискТТ.Вставить(""Покупатель"", Null);

колСтр = лОбъекты.Количество();
Для инд=1 По колСтр Цикл
	стрПартнер = лОбъекты.Получить(инд-1);
	
	лПоискАдрес.Вставить(""Ссылка"", стрПартнер.Ссылка);
	лПоискАдрес.Вставить(""Покупатель"", стрПартнер.Покупатель);
	мстр = тзн.НайтиСтроки(лПоискАдрес);
	Если мстр.Количество()=0 Тогда
		СообщитьПодробно(""Упс, не найдено адресных записей по ""+стрПартнер.Ссылка, СтатусСообщения.Важное, Истина, ЗаписьВЖурнал);
		Продолжить;
	Иначе
		стрТТ = мстр[0];

		стрПартнер.Адрес = стрТТ.Адрес;
		стрПартнер.Телефон = стрТТ.Телефон;
		
		лПоискТТ.Вставить(""Родитель"", стрПартнер.Ссылка);
		ОбработатьПодчиненныхПартнеров_11(лОбъекты, тзн, лПоискТТ, стрТТ.Покупатель);
	КонецЕсли;
КонецЦикла;

лКонстанты.Вставить(""ПартнерКонтрагент"",лОбъекты.Скопировать(,""Ссылка,Покупатель""));"					
printcode	Код		Код объекта									
deleted	ПометкаУдаления		Пометка на удаление									
buyer	Покупатель	ref_buyers	Ссылка на владельца / покупателя		Контрагенты.Ссылка							
store		*ref_stores	Ссылка на склад отгрузки									
pricetype	*ТипЦен	*ref_pricetypes	Ссылка на тип цен		Контрагенты.ОсновнойДоговорКонтрагента.ТипЦен							
buypointtype	*Родитель	*ref_buypointtypes	Ссылка на тип торговой точки									
fullname	НаименованиеПолное		Полное наименование									
address	Адрес		Адрес									
phone	Телефон		Телефон									
contact	*КонтактноеЛицо		Контактное лицо									
vatstatus			Плательщик НДС									
canexceedlimit	*КонтролироватьЧислоДнейЗадолженности		Признак разрешения превышать срок кредита									
creditlimit	*ДопустимаяСуммаЗадолженности		Ограничение суммы кредита в основной валюте									
creditdeadline	*ДопустимоеЧислоДнейЗадолженности		Ограничение глубины кредита в днях									
maxorderamount			Ограничение максимальной сумма заказа									
minorderamount			Ограничение минимальной сумма заказа									
maxdiscount			Ограничение максимального процента скидки									
mindiscount			Ограничение минимального процента скидки									
extrarate			Процент наценки / скидки									
												
												
Договора												
Мобиком	Источник	Ссылка	Описание		Запрос	Есть условие	Доп. при выгрузке	Доп. при загрузке				
name	Наименование		Наименование		"ВЫБРАТЬ
	СоглашенияСКлиентами.Ссылка,
	СоглашенияСКлиентами.Наименование,
	СоглашенияСКлиентами.Номер,
	ВЫБОР
		КОГДА СоглашенияСКлиентами.ДатаНачалаДействия = ДАТАВРЕМЯ(1, 1, 1)
			ТОГДА ДАТАВРЕМЯ(1900, 1, 1)
		ИНАЧЕ СоглашенияСКлиентами.ДатаНачалаДействия
	КОНЕЦ КАК ДатаНачалаДействия,
	ВЫБОР
		КОГДА СоглашенияСКлиентами.ДатаОкончанияДействия = ДАТАВРЕМЯ(1, 1, 1)
			ТОГДА ДАТАВРЕМЯ(2100, 1, 1)
		ИНАЧЕ СоглашенияСКлиентами.ДатаОкончанияДействия
	КОНЕЦ КАК ДатаОкончанияДействия,
	ВЫБОР
		КОГДА СоглашенияСКлиентами.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
			ТОГДА Организации.Ссылка
		ИНАЧЕ СоглашенияСКлиентами.Организация
	КОНЕЦ КАК Организация,
	СоглашенияСКлиентами.Контрагент,
	ВЫБОР
		КОГДА СоглашенияСКлиентами.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
			ТОГДА ВЫБОР
					КОГДА СоглашенияСКлиентами.СегментПартнеров = ЗНАЧЕНИЕ(Справочник.СегментыПартнеров.ПустаяСсылка)
						ТОГДА Партнеры.Ссылка
					ИНАЧЕ ПартнерыСегмента.Партнер
				КОНЕЦ
		ИНАЧЕ СоглашенияСКлиентами.Партнер
	КОНЕЦ КАК Партнер,
	СоглашенияСКлиентами.СегментПартнеров,
	СоглашенияСКлиентами.ВидЦен,
	СоглашенияСКлиентами.ПометкаУдаления
ПОМЕСТИТЬ ВТ
ИЗ
	Справочник.СоглашенияСКлиентами КАК СоглашенияСКлиентами
		ПОЛНОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
		ПО (СоглашенияСКлиентами.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))
		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПартнерыСегмента КАК ПартнерыСегмента
		ПО СоглашенияСКлиентами.СегментПартнеров = ПартнерыСегмента.Сегмент
		ПОЛНОЕ СОЕДИНЕНИЕ Справочник.Партнеры КАК Партнеры
		ПО (СоглашенияСКлиентами.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка))
			И (СоглашенияСКлиентами.СегментПартнеров = ЗНАЧЕНИЕ(Справочник.СегментыПартнеров.ПустаяСсылка))
ГДЕ
	СоглашенияСКлиентами.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСоглашенийСКлиентами.Действует)
;

////////////////////////////////////////////////////////////////////////////////
ВЫБРАТЬ
	ВТ.Ссылка,
	ВТ.Наименование,
	ВТ.Номер,
	ВТ.ДатаНачалаДействия,
	ВТ.ДатаОкончанияДействия,
	ВТ.Организация,
	ВТ.Контрагент,
	ВТ.Партнер,
	ВТ.СегментПартнеров,
	ВТ.ВидЦен,
	ВТ.ПометкаУдаления
ИЗ
	ВТ КАК ВТ"	0	"// подстановка контрагентов
Запрос2 = Новый Запрос;
Запрос2.Текст = 
""ВЫБРАТЬ
|	Соглашения.Ссылка,
|	Соглашения.Наименование,
|	Соглашения.Номер,
|	Соглашения.Организация,
|	Соглашения.Контрагент,
|	Соглашения.Партнер,
|	Соглашения.СегментПартнеров,
|	Соглашения.ВидЦен,
|	Соглашения.ДатаНачалаДействия,
|	Соглашения.ДатаОкончанияДействия,
|	Соглашения.ПометкаУдаления
|ПОМЕСТИТЬ Соглашения
|ИЗ
|	&Соглашения КАК Соглашения
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	ПартнерКонтрагент.Ссылка,
|	ПартнерКонтрагент.Покупатель
|ПОМЕСТИТЬ ПартнерКонтрагент
|ИЗ
|	&ПартнерКонтрагент КАК ПартнерКонтрагент
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	Соглашения.Ссылка,
|	Соглашения.Наименование,
|	Соглашения.Номер,
|	Соглашения.ПометкаУдаления,
|	Соглашения.Организация,
|	Соглашения.Партнер,
|	Соглашения.ВидЦен,
|	Соглашения.ДатаНачалаДействия,
|	Соглашения.ДатаОкончанияДействия,
|	ПартнерКонтрагент.Покупатель КАК Контрагент
|ПОМЕСТИТЬ ВТ
|ИЗ
|	Соглашения КАК Соглашения
|		ЛЕВОЕ СОЕДИНЕНИЕ ПартнерКонтрагент КАК ПартнерКонтрагент
|		ПО Соглашения.Партнер = ПартнерКонтрагент.Ссылка
|;
|
|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ РАЗЛИЧНЫЕ
|	ВТ.Ссылка КАК Соглашение,
|	ВТ.Наименование,
|	ВТ.ПометкаУдаления,
|	ВТ.Организация,
|	ВТ.ВидЦен,
|	ВТ.ДатаНачалаДействия,
|	ВТ.ДатаОкончанияДействия,
|	ВТ.Партнер,
|	ВТ.Контрагент
|ИЗ
|	ВТ КАК ВТ
|ГДЕ
|	ВТ.Контрагент <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)"";
Запрос2.УстановитьПараметр(""Соглашения"",лОбъекты);
Запрос2.УстановитьПараметр(""ПартнерКонтрагент"",лКонстанты.ПартнерКонтрагент);

лОбъекты = Запрос2.Выполнить().Выгрузить();
лАвтоИдентификатор = Ложь;

лТмпТЗ = лОбъекты.Скопировать(,""Соглашение"");
лТмпТЗ.Свернуть(""Соглашение"");
стрСФ = лСписокФильтров.Найти(лИмяРаздела,""ИмяРаздела"");
Если стрСФ=Неопределено Тогда
	стрСФ = лСписокФильтров.Добавить();
	стрСФ.ИмяРаздела = лИмяРаздела;
КонецЕсли;
стрСФ.Отбор = лТмпТЗ.ВыгрузитьКолонку(""Соглашение"");

// данные для формирования sid
лОбъекты.Колонки.Добавить(""Ссылка"");
Для Каждого стрДоп Из лОбъекты Цикл
	стрДоп.Ссылка = """"+XMLСтрока(стрДоп.Соглашение)+""***""+XMLСтрока(стрДоп.Партнер);
КонецЦикла;

лКонстанты.Вставить(""ДоговорПартнер"",лОбъекты.Скопировать(,""Ссылка,Соглашение,Партнер""));"					
printcode	*Код		Код объекта									
deleted	ПометкаУдаления		Пометка на удаление									
firm	Организация	ref_firms	Ссылка на собственную фирму		ВТ.Организация							
counteragent	Контрагент	*ref_counteragents	Ссылка на контрагента / юр. лицо / покупателя									
pricetype	ВидЦен	*ref_pricetypes	Ссылка на тип цен		ВТ.ВидЦен							
startdate	ДатаНачалаДействия		Дата начала действия договора									
enddate	ДатаОкончанияДействия		Дата окончания действия договора									
canexceedlimit	*КонтролироватьЧислоДнейЗадолженности		Признак разрешения превышать срок кредита									
creditlimit	*ДопустимаяСуммаЗадолженности		Ограничение суммы кредита в основной валюте									
creditdeadline	*ДопустимоеЧислоДнейЗадолженности		Ограничение глубины кредита в днях									
maxorderamount			Ограничение максимальной сумма заказа									
minorderamount			Ограничение минимальной сумма заказа									
maxdiscount			Ограничение максимального процента скидки									
mindiscount			Ограничение минимального процента скидки									
	#	ref_buypoints			ВТ.Партнер							
												
												
Обслуживаемые по договору ТТ												
Мобиком	Источник	Ссылка	Описание		Запрос	Есть условие	Доп. при выгрузке	Доп. при загрузке				
deleted	*ПометкаУдаления		Пометка на удаление		"ВЫБРАТЬ
	1 КАК Поле1"	0	"// выгрузка

лОбъекты = лКонстанты.ДоговорПартнер.Скопировать();
лОбъекты.Свернуть(""Ссылка,Партнер"");"					
agreement	Ссылка	ref_agreements	Ссылка на договор		НЕОПРЕДЕЛЕНО							
buypoint	Партнер	ref_buypoints	Ссылка на торговую точку		НЕОПРЕДЕЛЕНО							
default	*ОсновнойДоговор		Признак основного договора									
												
												
Территории агентов												
Мобиком	Источник	Ссылка	Описание		Запрос	Есть условие	Доп. при выгрузке	Доп. при загрузке				
deleted					"ВЫБРАТЬ
	Партнеры.Ссылка КАК Партнер,
	Партнеры.ОсновнойМенеджер КАК Сотрудник
ИЗ
	Справочник.Партнеры КАК Партнеры"	0	"// данные для формирования sid

лОбъекты.Колонки.Добавить(""Ссылка"");
Для Каждого стрДоп Из лОбъекты Цикл
	стрДоп.Ссылка = """"+XMLСтрока(стрДоп.Сотрудник)+""***""+XMLСтрока(стрДоп.Партнер);
КонецЦикла;"					
employee	Сотрудник	ref_employees	Ссылка на сотрудника		Партнеры.ОсновнойМенеджер							
buypoint	Партнер	ref_buypoints	Ссылка на торговую точку		Партнеры.Ссылка							
												
												
Товарные группы												
Мобиком	Источник	Ссылка	Описание		Запрос	Есть условие	Доп. при выгрузке	Доп. при загрузке				
name	Наименование		Наименование		"ВЫБРАТЬ
	Номенклатура.Ссылка КАК Ссылка,
	Номенклатура.Наименование,
	Номенклатура.Код,
	Номенклатура.ПометкаУдаления,
	Номенклатура.ЭтоГруппа,
	Номенклатура.Родитель
ИЗ
	Справочник.Номенклатура КАК Номенклатура
<ГДЕ ?>
УПОРЯДОЧИТЬ ПО
	Ссылка
ИТОГИ ПО
	Ссылка ТОЛЬКО ИЕРАРХИЯ"	0	"// выборка до верхнего уровня и сортировка
лОбъекты.Колонки.Добавить(""Представление"");
колстр = лОбъекты.Количество();
Для Инд=1 По колстр Цикл
	стрДоп=лОбъекты.Получить(колстр-Инд);
	Если ЗначениеЗаполнено(стрДоп.Ссылка) Тогда
		Если стрДоп.ЭтоГруппа Тогда
			стрДоп.Представление = стрДоп.Ссылка.ПолноеНаименование();
		Иначе
			лОбъекты.Удалить(стрДоп);
		КонецЕсли;
	Иначе
		лОбъекты.Удалить(стрДоп);
	КонецЕсли;
КонецЦикла;
лОбъекты.Свернуть(""Ссылка,Представление,Наименование,Код,ПометкаУдаления,Родитель"");
лОбъекты.Сортировать(""Представление"");"				"// выборка до верхнего уровня и сортировка
лОбъекты.Колонки.Добавить(""Представление"");
Для Каждого стрДоп Из лОбъекты Цикл
	стрДоп.Представление = стрДоп.Ссылка.ПолноеНаименование();
КонецЦикла;
лОбъекты.Сортировать(""Представление"");"	
printcode	Код		Код объекта									
deleted	ПометкаУдаления		Пометка на удаление									
parentskugroup	Родитель	*ref_skugroups	Ссылка на родительскую группу									
sequence			Сортировка									
	*#	ref_skus			Номенклатура.Ссылка							
												
												
Товары												
Мобиком	Источник	Ссылка	Описание		Запрос	Есть условие	Доп. при выгрузке	Доп. при загрузке				
name	Наименование		Наименование		"ВЫБРАТЬ
	Номенклатура.Ссылка,
	Номенклатура.Наименование,
	Номенклатура.Код,
	ВЫБОР
		КОГДА (ВЫРАЗИТЬ(Номенклатура.Артикул КАК СТРОКА(25))) = """"
			ТОГДА ""--""
		ИНАЧЕ Номенклатура.Артикул
	КОНЕЦ КАК Артикул,
	Номенклатура.ПометкаУдаления,
	Номенклатура.Родитель,
	Номенклатура.ЕдиницаИзмерения,
	Номенклатура.НаименованиеПолное,
//	Номенклатура.Весовой,
	ВЫБОР
		КОГДА Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
			ТОГДА 0.18
		КОГДА Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
			ТОГДА 0.1
		ИНАЧЕ 0
	КОНЕЦ КАК СтавкаНДС,
	1 КАК merchandising,
	1 КАК countable
ИЗ
	Справочник.Номенклатура КАК Номенклатура
ГДЕ
	Номенклатура.ЭтоГруппа = ЛОЖЬ
	И Номенклатура.ЕдиницаИзмерения<>Значение(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)"	1						
printcode	Артикул		Код объекта									
deleted	ПометкаУдаления		Пометка на удаление									
skugroup	Родитель	ref_skugroups	Ссылка на товарную группу		Номенклатура.Родитель							
unit	ЕдиницаИзмерения	ref_units	Ссылка на единицу измерения		Номенклатура.ЕдиницаИзмерения							
fullname	НаименованиеПолное		Полное наименование									
weight			Вес единицы измерения									
canweight	*Весовой		Признак весового товара									
sequence			Сортировка									
vatrate	СтавкаНДС		Процент ставки НДС									
merchandising	merchandising		Отметка об инструменте мерчандайзинга									
countable	countable		Отметка о количественном учете наличия при мерчандайзинге									
												
												
Единицы измерения товаров												
Мобиком	Источник	Ссылка	Описание		Запрос	Есть условие	Доп. при выгрузке	Доп. при загрузке				
printcode			не используется		"ВЫБРАТЬ
	Номенклатура.Ссылка КАК Номенклатура,
	Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	Номенклатура.НаборУпаковок КАК НаборУпаковок,
	Номенклатура.ИспользоватьУпаковки КАК ИспользоватьУпаковки
ПОМЕСТИТЬ ВТ
ИЗ
	Справочник.Номенклатура КАК Номенклатура
ГДЕ
	Номенклатура.ЭтоГруппа = ЛОЖЬ
	И Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	И Номенклатура.Ссылка В (&Отбор_ref_skus)
;

////////////////////////////////////////////////////////////////////////////////
ВЫБРАТЬ
	ВТ.Номенклатура КАК Номенклатура,
	ВТ.ЕдиницаИзмерения,
	1 КАК Коэффициент
ПОМЕСТИТЬ ЕдИзмНоменклатуры
ИЗ
	ВТ КАК ВТ
ГДЕ
	ВТ.ИспользоватьУпаковки = ЛОЖЬ

ОБЪЕДИНИТЬ ВСЕ

ВЫБРАТЬ
	УпаковкиЕдиницыИзмерения.Владелец,
	УпаковкиЕдиницыИзмерения.ЕдиницаИзмерения,
	УпаковкиЕдиницыИзмерения.Числитель
ИЗ
	Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
		ЛЕВОЕ СОЕДИНЕНИЕ ВТ КАК ВТ
		ПО УпаковкиЕдиницыИзмерения.Владелец = ВТ.Номенклатура
ГДЕ
	ВТ.ИспользоватьУпаковки = ИСТИНА
	И ВТ.НаборУпаковок = ЗНАЧЕНИЕ(Справочник.НаборыУпаковок.ИндивидуальныйДляНоменклатуры)

ОБЪЕДИНИТЬ ВСЕ

ВЫБРАТЬ
	ВТ.Номенклатура,
	УпаковкиЕдиницыИзмерения.ЕдиницаИзмерения,
	УпаковкиЕдиницыИзмерения.Числитель
ИЗ
	Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
		ЛЕВОЕ СОЕДИНЕНИЕ ВТ КАК ВТ
		ПО УпаковкиЕдиницыИзмерения.Владелец = ВТ.НаборУпаковок
ГДЕ
	ВТ.ИспользоватьУпаковки = ИСТИНА
	И ВТ.НаборУпаковок <> ЗНАЧЕНИЕ(Справочник.НаборыУпаковок.ИндивидуальныйДляНоменклатуры)

ОБЪЕДИНИТЬ

ВЫБРАТЬ
	ВТ.Номенклатура,
	ВТ.ЕдиницаИзмерения,
	1
ИЗ
	ВТ КАК ВТ
ГДЕ
	ВТ.ИспользоватьУпаковки = ИСТИНА
;

////////////////////////////////////////////////////////////////////////////////
ВЫБРАТЬ
	ЕдИзмНоменклатуры.Номенклатура КАК Номенклатура,
	ЕдИзмНоменклатуры.ЕдиницаИзмерения,
	ЕдИзмНоменклатуры.Коэффициент,
	ШтрихкодыНоменклатуры.Штрихкод
ИЗ
	ЕдИзмНоменклатуры КАК ЕдИзмНоменклатуры
		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
		ПО ЕдИзмНоменклатуры.Номенклатура = ШтрихкодыНоменклатуры.Номенклатура
			И (ЕдИзмНоменклатуры.Номенклатура.ЕдиницаИзмерения = ЕдИзмНоменклатуры.ЕдиницаИзмерения
					И ШтрихкодыНоменклатуры.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
				ИЛИ ЕдИзмНоменклатуры.ЕдиницаИзмерения = ШтрихкодыНоменклатуры.Упаковка.ЕдиницаИзмерения)
ГДЕ
	ЕдИзмНоменклатуры.ЕдиницаИзмерения В (&Отбор_ref_units)
УПОРЯДОЧИТЬ ПО
	Номенклатура"	1						
barcode	Штрихкод		Штрих-код									
deleted	*ПометкаУдаления		Пометка на удаление									
sku	Номенклатура	ref_skus	Ссылка на товар		ПАРАМЕТР							
unit	ЕдиницаИзмерения	ref_units	Ссылка на единицу измерения		ПАРАМЕТР							
factor	Коэффициент		Коэффициент пересчета в базовую единицу измерения									
weight	*Вес		Вес единицы измерения (не используется)									
												
												
Изображения товаров												
Мобиком	Источник	Ссылка	Описание		Запрос	Есть условие	Доп. при выгрузке	Доп. при загрузке				
deleted	ПометкаУдаления				"ВЫБРАТЬ
	НоменклатураПрисоединенныеФайлы.Ссылка КАК Идентификатор,
	НоменклатураПрисоединенныеФайлы.ВладелецФайла КАК Объект,
	НоменклатураПрисоединенныеФайлы.ПометкаУдаления,
	ВЫБОР
		КОГДА НоменклатураПрисоединенныеФайлы.ВладелецФайла.ФайлКартинки = НоменклатураПрисоединенныеФайлы.Ссылка
			ТОГДА ИСТИНА
		ИНАЧЕ ЛОЖЬ
	КОНЕЦ КАК ОсновноеИзображение,
	ПрисоединенныеФайлы.ХранимыйФайл КАК Хранилище
ИЗ
	Справочник.НоменклатураПрисоединенныеФайлы КАК НоменклатураПрисоединенныеФайлы
		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПрисоединенныеФайлы КАК ПрисоединенныеФайлы
		ПО (ПрисоединенныеФайлы.ПрисоединенныйФайл = НоменклатураПрисоединенныеФайлы.Ссылка)
ГДЕ
	НоменклатураПрисоединенныеФайлы.ТипХраненияФайла = ЗНАЧЕНИЕ(Перечисление.ТипыХраненияФайлов.ВИнформационнойБазе)
	И НЕ ПрисоединенныеФайлы.ХранимыйФайл ЕСТЬ NULL 
	И НоменклатураПрисоединенныеФайлы.Расширение В (""png"", ""jpg"", ""jpeg"")"	1	"// айдишники фоток и выгрузка на фотохостинг

лОбщийРазмер = 0;

лОбъекты.Колонки.Добавить(""Ссылка"");
Для Каждого стрДоп Из лОбъекты Цикл
	стрДоп.Ссылка = ""DEFAULT-""+XMLСтрока(стрДоп.Идентификатор);

	лРазмер = ВыгрузитьФото(стрДоп.Хранилище, стрДоп.Ссылка);
	Если лРазмер=0 Тогда
		стрДоп.Ссылка="""";
	Иначе
		лОбщийРазмер = лОбщийРазмер+лРазмер;
	КонецЕсли;
КонецЦикла;

мстрТЗ = лОбъекты.НайтиСтроки(Новый Структура(""Ссылка"",""""));
Для Каждого стрТЗ Из мстрТЗ Цикл
	лОбъекты.Удалить(стрТЗ);
КонецЦикла;

Сообщить(""Всего отправлено ""+лОбщийРазмер+"" байт"");"					
sku	Объект	ref_skus	Ссылка на товар		НоменклатураПрисоединенныеФайлы.ВладелецФайла							
isdefault	ОсновноеИзображение		Основное изображение									
image	Ссылка		Фотография товара									
												
												
Остатки товаров												
Мобиком	Источник	Ссылка	Описание		Запрос	Есть условие	Доп. при выгрузке	Доп. при загрузке				
deleted			Пометка на удаление		"ВЫБРАТЬ
	СвободныеОстатки.Номенклатура КАК Номенклатура,
	СвободныеОстатки.Склад КАК Склад,
	СвободныеОстатки.ВНаличииОстаток КАК ВНаличии,
	СвободныеОстатки.ВРезервеСоСкладаОстаток + СвободныеОстатки.ВРезервеПодЗаказОстаток КАК Резерв,
	СвободныеОстатки.ВНаличииОстаток - СвободныеОстатки.ВРезервеСоСкладаОстаток - СвободныеОстатки.ВРезервеПодЗаказОстаток КАК Свободно
ИЗ
	РегистрНакопления.СвободныеОстатки.Остатки(&КонецПериода, {(Номенклатура).* КАК Номенклатура, (Склад).* КАК Склад}) КАК СвободныеОстатки
ГДЕ
	(СвободныеОстатки.ВНаличииОстаток <> 0
			ИЛИ СвободныеОстатки.ВРезервеСоСкладаОстаток <> 0
			ИЛИ СвободныеОстатки.ВРезервеПодЗаказОстаток <> 0)"	1				"ВЫБРАТЬ
	График.Номенклатура КАК Номенклатура,
	График.Склад КАК Склад,
	-МИНИМУМ(График.КоличествоКонечныйОстаток) КАК Количество
ПОМЕСТИТЬ ВтРезервыПоГрафику
ИЗ
	РегистрНакопления.ГрафикДвиженияТоваров.ОстаткиИОбороты({(КОНЕЦПЕРИОДА(&ДатаФормирования, ДЕНЬ)) КАК Поле2}, {(КОНЕЦПЕРИОДА(&ДатаФормирования, ДЕНЬ)) КАК Поле2}, День, ДвиженияИГраницыПериода, Склад.ВариантКонтроля = ЗНАЧЕНИЕ(Перечисление.ВариантыКонтроля.ОстаткиСУчетомГрафика) {(Номенклатура).* КАК Номенклатура, (Склад).* КАК Склад, (Характеристика).* КАК Характеристика}) КАК График
ГДЕ
	ВЫБОР
			КОГДА График.Склад.ГраницаГрафикаДоступности >= &ДатаФормирования
				ТОГДА График.Период <= График.Склад.ГраницаГрафикаДоступности
			КОГДА График.Склад.СрокПоставки > 0
				ТОГДА График.Период <= ДОБАВИТЬКДАТЕ(&ДатаФормирования, ДЕНЬ, График.Склад.СрокПоставки)
			ИНАЧЕ ЛОЖЬ
		КОНЕЦ
	И График.КоличествоКонечныйОстаток < 0

СГРУППИРОВАТЬ ПО
	График.Номенклатура,
	График.Склад

ИНДЕКСИРОВАТЬ ПО
	Номенклатура,
	Склад
;

////////////////////////////////////////////////////////////////////////////////
ВЫБРАТЬ
	СвободныеОстатки.Номенклатура КАК Номенклатура,
	СвободныеОстатки.Склад КАК Склад,
	СвободныеОстатки.ВНаличииОстаток КАК ВНаличии,
	ВЫБОР
		КОГДА СвободныеОстатки.Склад.ВариантКонтроля = ЗНАЧЕНИЕ(Перечисление.ВариантыКонтроля.ОстаткиСУчетомРезерва)
			ТОГДА СвободныеОстатки.ВРезервеОстаток
		КОГДА СвободныеОстатки.Склад.ВариантКонтроля = ЗНАЧЕНИЕ(Перечисление.ВариантыКонтроля.ОстаткиСУчетомГрафика)
			ТОГДА ЕСТЬNULL(РезервыПоГрафику.Количество, 0)
		ИНАЧЕ 0
	КОНЕЦ КАК Резерв,
	СвободныеОстатки.ВНаличииОстаток - ВЫБОР
		КОГДА СвободныеОстатки.Склад.ВариантКонтроля = ЗНАЧЕНИЕ(Перечисление.ВариантыКонтроля.ОстаткиСУчетомРезерва)
			ТОГДА СвободныеОстатки.ВРезервеОстаток
		КОГДА СвободныеОстатки.Склад.ВариантКонтроля = ЗНАЧЕНИЕ(Перечисление.ВариантыКонтроля.ОстаткиСУчетомГрафика)
			ТОГДА ЕСТЬNULL(РезервыПоГрафику.Количество, 0)
		ИНАЧЕ 0
	КОНЕЦ КАК Свободно
ИЗ
	РегистрНакопления.СвободныеОстатки.Остатки(, {(Номенклатура).* КАК Номенклатура, (Склад).* КАК Склад}) КАК СвободныеОстатки
		ЛЕВОЕ СОЕДИНЕНИЕ ВтРезервыПоГрафику КАК РезервыПоГрафику
		ПО СвободныеОстатки.Номенклатура = РезервыПоГрафику.Номенклатура
			И СвободныеОстатки.Склад = РезервыПоГрафику.Склад
			И (СвободныеОстатки.Склад.ВариантКонтроля = ЗНАЧЕНИЕ(Перечисление.ВариантыКонтроля.ОстаткиСУчетомГрафика))
ГДЕ
	(СвободныеОстатки.ВНаличииОстаток <> 0
			ИЛИ ВЫБОР
				КОГДА СвободныеОстатки.Склад.ВариантКонтроля = ЗНАЧЕНИЕ(Перечисление.ВариантыКонтроля.ОстаткиСУчетомРезерва)
					ТОГДА СвободныеОстатки.ВРезервеОстаток
				КОГДА СвободныеОстатки.Склад.ВариантКонтроля = ЗНАЧЕНИЕ(Перечисление.ВариантыКонтроля.ОстаткиСУчетомГрафика)
					ТОГДА ЕСТЬNULL(РезервыПоГрафику.Количество, 0)
				ИНАЧЕ 0
			КОНЕЦ <> 0)"		
sku	Номенклатура	ref_skus	Ссылка на товар		СвободныеОстатки.Номенклатура							
store	Склад	ref_stores	Ссылка на склад		СвободныеОстатки.Склад							
firm		ref_firms	Ссылка на собственную фирму									
quantity	Свободно		Количество									
reserved			Х									
												
												
Задолженности					// тут пришлось сделать маленький "хак" и воткнуть костыль							
Мобиком	Источник	Ссылка	Описание		Запрос	Есть условие	Доп. при выгрузке	Доп. при загрузке			Отчет.ДебиторскаяЗадолженность	
deleted			Пометка на удаление		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	Расчеты.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	Расчеты.ЗаказКлиента КАК ЗаказКлиента,
	Расчеты.Валюта КАК Валюта,
	ВЫБОР
		КОГДА Расчеты.СуммаОстаток > 0
				И Расчеты.КОплатеОстаток = 0
			ТОГДА Расчеты.СуммаОстаток
		ИНАЧЕ Расчеты.КОплатеОстаток
	КОНЕЦ КАК ДолгОстаток,
	ВЫБОР
		КОГДА Расчеты.СуммаОстаток > 0
				И Расчеты.КОплатеОстаток = 0
			ТОГДА Расчеты.СуммаОстаток
		ИНАЧЕ Расчеты.КОплатеОстаток
	КОНЕЦ КАК ДолгОстатокНаКонецПериода,
	&КонецПериода КАК ДатаПлатежа,
	ДОБАВИТЬКДАТЕ(&КонецПериода, СЕКУНДА, 1) КАК Период,
	ВЫБОР
		КОГДА Расчеты.СуммаОстаток > 0
				И Расчеты.КОплатеОстаток = 0
			ТОГДА ИСТИНА
		ИНАЧЕ ЛОЖЬ
	КОНЕЦ КАК ФактическаяЗадолженность
ПОМЕСТИТЬ ТаблицаОстатковКлиентов
ИЗ
	РегистрНакопления.РасчетыСКлиентами.Остатки(&КонецПериода, ) КАК Расчеты
		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСКлиентами КАК График
		ПО (Расчеты.ЗаказКлиента = График.Регистратор)
			И (Расчеты.АналитикаУчетаПоПартнерам = График.АналитикаУчетаПоПартнерам)
			И (Расчеты.ЗаказКлиента = График.ЗаказКлиента)
			И (Расчеты.Валюта = График.Валюта)
			И (&КонецПериода < График.Период)
			И (График.КОплате > 0)
ГДЕ
	(Расчеты.КОплатеОстаток > 0
			ИЛИ Расчеты.СуммаОстаток > 0
				И Расчеты.КОплатеОстаток = 0
				И График.Регистратор ЕСТЬ NULL )
	И Расчеты.АналитикаУчетаПоПартнерам.Организация В (&Отбор_ref_firms)
//	И Расчеты.АналитикаУчетаПоПартнерам.Контрагент В (&Отбор_ref_buyers)
	И Расчеты.АналитикаУчетаПоПартнерам.Партнер В (&Отбор_ref_buypoints)
;

////////////////////////////////////////////////////////////////////////////////
ВЫБРАТЬ РАЗРЕШЕННЫЕ
	Расчеты.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	Расчеты.ЗаказКлиента КАК ЗаказКлиента,
	Расчеты.Валюта КАК Валюта,
	МАКСИМУМ(НАЧАЛОПЕРИОДА(Расчеты.ДатаПлатежа, ДЕНЬ)) КАК ДатаПлатежа,
	МАКСИМУМ(НАЧАЛОПЕРИОДА(Расчеты.Период, ДЕНЬ)) КАК Период,
	ТаблицаОстатков.ФактическаяЗадолженность КАК ФактическаяЗадолженность
ПОМЕСТИТЬ ТаблицаПериодовКлиентов
ИЗ
	РегистрНакопления.РасчетыСКлиентами КАК Расчеты
		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаОстатковКлиентов КАК ТаблицаОстатков
		ПО Расчеты.АналитикаУчетаПоПартнерам = ТаблицаОстатков.АналитикаУчетаПоПартнерам
			И Расчеты.ЗаказКлиента = ТаблицаОстатков.ЗаказКлиента
			И Расчеты.Валюта = ТаблицаОстатков.Валюта
			И (ТаблицаОстатков.ДолгОстаток <> 0)
ГДЕ
	Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	И Расчеты.Активность
	И Расчеты.Период <= &КонецПериода
	И Расчеты.Период < ТаблицаОстатков.Период
	И Расчеты.КОплате <> 0
	И НЕ ТаблицаОстатков.ФактическаяЗадолженность

СГРУППИРОВАТЬ ПО
	Расчеты.АналитикаУчетаПоПартнерам,
	Расчеты.ЗаказКлиента,
	Расчеты.Валюта,
	ТаблицаОстатков.ФактическаяЗадолженность

ОБЪЕДИНИТЬ ВСЕ

ВЫБРАТЬ
	Расчеты.АналитикаУчетаПоПартнерам,
	Расчеты.ЗаказКлиента,
	Расчеты.Валюта,
	МАКСИМУМ(НАЧАЛОПЕРИОДА(Расчеты.Период, ДЕНЬ)),
	МАКСИМУМ(НАЧАЛОПЕРИОДА(Расчеты.Период, ДЕНЬ)),
	ТаблицаОстатков.ФактическаяЗадолженность
ИЗ
	РегистрНакопления.РасчетыСКлиентами КАК Расчеты
		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаОстатковКлиентов КАК ТаблицаОстатков
		ПО Расчеты.АналитикаУчетаПоПартнерам = ТаблицаОстатков.АналитикаУчетаПоПартнерам
			И Расчеты.ЗаказКлиента = ТаблицаОстатков.ЗаказКлиента
			И Расчеты.Валюта = ТаблицаОстатков.Валюта
			И (ТаблицаОстатков.ДолгОстаток <> 0)
ГДЕ
	Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	И Расчеты.Активность
	И Расчеты.Период <= &КонецПериода
	И Расчеты.Период < ТаблицаОстатков.Период
	И Расчеты.Сумма <> 0
	И Расчеты.КОплате = 0
	И ТаблицаОстатков.ФактическаяЗадолженность

СГРУППИРОВАТЬ ПО
	Расчеты.АналитикаУчетаПоПартнерам,
	Расчеты.ЗаказКлиента,
	Расчеты.Валюта,
	ТаблицаОстатков.ФактическаяЗадолженность
;

////////////////////////////////////////////////////////////////////////////////
ВЫБРАТЬ РАЗРЕШЕННЫЕ
	Периоды.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	Периоды.ЗаказКлиента КАК ЗаказКлиента,
	Периоды.Валюта КАК Валюта,
	Периоды.Период КАК Период,
	Периоды.ДатаПлатежа КАК ДатаПлатежа,
	СУММА(ЕСТЬNULL(Расчеты.КОплате, 0)) КАК Долг,
	Периоды.ФактическаяЗадолженность КАК ФактическаяЗадолженность
ПОМЕСТИТЬ ТаблицаОтгрузокКлиентов
ИЗ
	ТаблицаПериодовКлиентов КАК Периоды
		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСКлиентами КАК Расчеты
		ПО Периоды.АналитикаУчетаПоПартнерам = Расчеты.АналитикаУчетаПоПартнерам
			И Периоды.ЗаказКлиента = Расчеты.ЗаказКлиента
			И Периоды.Валюта = Расчеты.Валюта
			И (Расчеты.Активность)
			И (Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
			И (Расчеты.Период МЕЖДУ Периоды.Период И КОНЕЦПЕРИОДА(Периоды.Период, ДЕНЬ))
			И (Расчеты.КОплате <> 0)
ГДЕ
	НЕ Периоды.ФактическаяЗадолженность

СГРУППИРОВАТЬ ПО
	Периоды.АналитикаУчетаПоПартнерам,
	Периоды.ЗаказКлиента,
	Периоды.Валюта,
	Периоды.Период,
	Периоды.ДатаПлатежа,
	Периоды.ФактическаяЗадолженность

ОБЪЕДИНИТЬ ВСЕ

ВЫБРАТЬ
	Периоды.АналитикаУчетаПоПартнерам,
	Периоды.ЗаказКлиента,
	Периоды.Валюта,
	Периоды.Период,
	Периоды.ДатаПлатежа,
	СУММА(ЕСТЬNULL(Расчеты.Сумма, 0)),
	Периоды.ФактическаяЗадолженность
ИЗ
	ТаблицаПериодовКлиентов КАК Периоды
		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСКлиентами КАК Расчеты
		ПО Периоды.АналитикаУчетаПоПартнерам = Расчеты.АналитикаУчетаПоПартнерам
			И Периоды.ЗаказКлиента = Расчеты.ЗаказКлиента
			И Периоды.Валюта = Расчеты.Валюта
			И (Расчеты.Активность)
			И (Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
			И (Расчеты.Период МЕЖДУ Периоды.Период И КОНЕЦПЕРИОДА(Периоды.Период, ДЕНЬ))
			И (Расчеты.Сумма <> 0)
ГДЕ
	Периоды.ФактическаяЗадолженность

СГРУППИРОВАТЬ ПО
	Периоды.АналитикаУчетаПоПартнерам,
	Периоды.ЗаказКлиента,
	Периоды.Валюта,
	Периоды.Период,
	Периоды.ДатаПлатежа,
	Периоды.ФактическаяЗадолженность
;

////////////////////////////////////////////////////////////////////////////////
ВЫБРАТЬ
	Остатки.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	Остатки.ЗаказКлиента КАК ЗаказКлиента,
	Остатки.Валюта КАК Валюта,
	ВЫБОР
		КОГДА Остатки.ДолгОстаток > ЕСТЬNULL(Отгрузки.Долг, 0)
			ТОГДА Остатки.ДолгОстаток - ЕСТЬNULL(Отгрузки.Долг, 0)
		ИНАЧЕ 0
	КОНЕЦ КАК НовыйДолгОстаток,
	Остатки.ДолгОстатокНаКонецПериода КАК ДолгОстатокНаКонецПериода,
	Отгрузки.Период КАК Период,
	ЕСТЬNULL(Отгрузки.ДатаПлатежа, Остатки.ДатаПлатежа) КАК ДатаПлатежа,
	Остатки.ФактическаяЗадолженность КАК ФактическаяЗадолженность
ПОМЕСТИТЬ НовыеОстаткиКлиентов
ИЗ
	ТаблицаОстатковКлиентов КАК Остатки
		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтгрузокКлиентов КАК Отгрузки
		ПО Остатки.АналитикаУчетаПоПартнерам = Отгрузки.АналитикаУчетаПоПартнерам
			И Остатки.ЗаказКлиента = Отгрузки.ЗаказКлиента
			И Остатки.Валюта = Отгрузки.Валюта
			И (Остатки.ДолгОстаток <> 0)
ГДЕ
	НЕ Остатки.ФактическаяЗадолженность

ОБЪЕДИНИТЬ ВСЕ

ВЫБРАТЬ
	Остатки.АналитикаУчетаПоПартнерам,
	Остатки.ЗаказКлиента,
	Остатки.Валюта,
	ВЫБОР
		КОГДА Остатки.ДолгОстаток > ЕСТЬNULL(Отгрузки.Долг, 0)
			ТОГДА Остатки.ДолгОстаток - ЕСТЬNULL(Отгрузки.Долг, 0)
		ИНАЧЕ 0
	КОНЕЦ,
	Остатки.ДолгОстатокНаКонецПериода,
	Отгрузки.Период,
	ЕСТЬNULL(Отгрузки.ДатаПлатежа, Остатки.ДатаПлатежа),
	Остатки.ФактическаяЗадолженность
ИЗ
	ТаблицаОстатковКлиентов КАК Остатки
		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтгрузокКлиентов КАК Отгрузки
		ПО Остатки.АналитикаУчетаПоПартнерам = Отгрузки.АналитикаУчетаПоПартнерам
			И Остатки.ЗаказКлиента = Отгрузки.ЗаказКлиента
			И Остатки.Валюта = Отгрузки.Валюта
			И (Остатки.ДолгОстаток <> 0)
ГДЕ
	Остатки.ФактическаяЗадолженность
;

////////////////////////////////////////////////////////////////////////////////
УНИЧТОЖИТЬ ТаблицаОстатковКлиентов
;

////////////////////////////////////////////////////////////////////////////////
УНИЧТОЖИТЬ ТаблицаОтгрузокКлиентов
;

////////////////////////////////////////////////////////////////////////////////
ВЫБРАТЬ
	Остатки.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	Остатки.ЗаказКлиента КАК ЗаказКлиента,
	Остатки.Валюта КАК Валюта,
	Остатки.Период КАК Период,
	Остатки.ДатаПлатежа КАК ДатаПлатежа,
	Остатки.НовыйДолгОстаток КАК ДолгОстаток,
	Остатки.ДолгОстатокНаКонецПериода КАК ДолгОстатокНаКонецПериода,
	Остатки.ФактическаяЗадолженность КАК ФактическаяЗадолженность
ПОМЕСТИТЬ ТаблицаОстатковКлиентов
ИЗ
	НовыеОстаткиКлиентов КАК Остатки

ИНДЕКСИРОВАТЬ ПО
	АналитикаУчетаПоПартнерам,
	ЗаказКлиента,
	Валюта
;

////////////////////////////////////////////////////////////////////////////////
УНИЧТОЖИТЬ НовыеОстаткиКлиентов
;

////////////////////////////////////////////////////////////////////////////////
ВЫБРАТЬ ПЕРВЫЕ 1
	1 КАК Поле1
ИЗ
	ТаблицаПериодовКлиентов КАК ТаблицаПериодовКлиентов
;

////////////////////////////////////////////////////////////////////////////////
ВЫБРАТЬ РАЗРЕШЕННЫЕ
	Расчеты.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	Расчеты.ЗаказКлиента КАК ЗаказКлиента,
	Расчеты.РасчетныйДокумент КАК РасчетныйДокумент,
	Расчеты.Валюта КАК Валюта,
	ТаблицаОстатков.ДатаПлатежа КАК ДатаПлатежа,
	ТаблицаОстатков.ДолгОстатокНаКонецПериода КАК Долг
ПОМЕСТИТЬ ТаблицаОстатковКлиентовПоДокументам
ИЗ
	РегистрНакопления.РасчетыСКлиентамиПоДокументам.Остатки(&КонецПериода, ) КАК Расчеты
		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаОстатковКлиентов КАК ТаблицаОстатков
		ПО Расчеты.АналитикаУчетаПоПартнерам = ТаблицаОстатков.АналитикаУчетаПоПартнерам
			И Расчеты.ЗаказКлиента = ТаблицаОстатков.ЗаказКлиента
			И Расчеты.Валюта = ТаблицаОстатков.Валюта
ГДЕ
	Расчеты.ДолгОстаток > 0
;

////////////////////////////////////////////////////////////////////////////////
УНИЧТОЖИТЬ ТаблицаОстатковКлиентов
;

////////////////////////////////////////////////////////////////////////////////
ВЫБРАТЬ РАЗЛИЧНЫЕ
	Расчеты.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	Расчеты.ЗаказКлиента КАК ЗаказКлиента,
	Расчеты.РасчетныйДокумент КАК РасчетныйДокумент,
	Расчеты.Валюта КАК Валюта,
	Расчеты.ДатаПлатежа КАК ДатаПлатежа,
	Расчеты.Долг КАК КОплате,
	Расчеты.Долг КАК ДолгОстаток
ПОМЕСТИТЬ ТаблицаОстатковКлиентов
ИЗ
	ТаблицаОстатковКлиентовПоДокументам КАК Расчеты
;

ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	Расчеты.АналитикаУчетаПоПартнерам,
	Расчеты.ЗаказКлиента,
	Расчеты.Валюта,
	Расчеты.РасчетныйДокумент,
	Остатки.ДатаПлатежа КАК ДатаПлатежа,
	-(Расчеты.КВозвратуОстаток + Расчеты.ПредоплатаОстаток) КАК НашДолг,
	ВЫБОР
		КОГДА Расчеты.ДолгОстаток > ЕСТЬNULL(Остатки.КОплате, Расчеты.ДолгОстаток)
			ТОГДА Остатки.КОплате
		ИНАЧЕ Расчеты.ДолгОстаток
	КОНЕЦ КАК ДолгКлиента,
	0 КАК КОтгрузке,
	АналитикаУчета.Партнер,
	АналитикаУчета.Организация,
	АналитикаУчета.Контрагент,
	АналитикаУчета.Договор
ПОМЕСТИТЬ ТаблицаЗадолженностейПросроченная
ИЗ
	РегистрНакопления.РасчетыСКлиентамиПоДокументам.Остатки(&КонецПериода, ) КАК Расчеты
		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаУчета
		ПО Расчеты.АналитикаУчетаПоПартнерам = АналитикаУчета.КлючАналитики
		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОстатковКлиентов КАК Остатки
		ПО Расчеты.АналитикаУчетаПоПартнерам = Остатки.АналитикаУчетаПоПартнерам
			И Расчеты.ЗаказКлиента = Остатки.ЗаказКлиента
			И Расчеты.РасчетныйДокумент = Остатки.РасчетныйДокумент
			И Расчеты.Валюта = Остатки.Валюта
ГДЕ
	АналитикаУчета.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	И АналитикаУчета.Организация В (&Отбор_ref_firms)
//	И АналитикаУчета.Контрагент В (&Отбор_ref_buyers)
	И АналитикаУчета.Партнер В (&Отбор_ref_buypoints)

ОБЪЕДИНИТЬ ВСЕ

ВЫБРАТЬ
	Расчеты.АналитикаУчетаПоПартнерам,
	Расчеты.ЗаказКлиента,
	Расчеты.Валюта,
	NULL,
	ДАТАВРЕМЯ(1, 1, 1),
	0,
	0,
	ВЫБОР
		КОГДА Расчеты.КОтгрузкеОстаток < 0
			ТОГДА -Расчеты.КОтгрузкеОстаток
		ИНАЧЕ 0
	КОНЕЦ,
	АналитикаУчета.Партнер,
	АналитикаУчета.Организация,
	АналитикаУчета.Контрагент,
	АналитикаУчета.Договор
ИЗ
	РегистрНакопления.РасчетыСКлиентами.Остатки(&КонецПериода, ) КАК Расчеты
		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаУчета
		ПО Расчеты.АналитикаУчетаПоПартнерам = АналитикаУчета.КлючАналитики
ГДЕ
	АналитикаУчета.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	И АналитикаУчета.Организация В (&Отбор_ref_firms)
//	И АналитикаУчета.Контрагент В (&Отбор_ref_buyers)
	И АналитикаУчета.Партнер В (&Отбор_ref_buypoints)
;

////////////////////////////////////////////////////////////////////////////////
ВЫБРАТЬ
	Таблица.АналитикаУчетаПоПартнерам,
	Таблица.ЗаказКлиента,
	Таблица.РасчетныйДокумент,
	Таблица.Валюта,
	СУММА(Таблица.ДолгКлиента) КАК ДолгКлиента
ПОМЕСТИТЬ ВсегоПросрочено
ИЗ
	ТаблицаЗадолженностейПросроченная КАК Таблица

СГРУППИРОВАТЬ ПО
	Таблица.АналитикаУчетаПоПартнерам,
	Таблица.ЗаказКлиента,
	Таблица.РасчетныйДокумент,
	Таблица.Валюта
;

////////////////////////////////////////////////////////////////////////////////
ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	Расчеты.АналитикаУчетаПоПартнерам,
	Расчеты.ЗаказКлиента,
	Расчеты.Валюта,
	Расчеты.РасчетныйДокумент,
	&КонецПериода КАК ДатаПлатежа,
	-(Расчеты.КВозвратуОстаток + Расчеты.ПредоплатаОстаток) КАК НашДолг,
	Расчеты.ДолгОстаток - ЕСТЬNULL(Остатки.ДолгКлиента, Расчеты.ДолгОстаток) КАК ДолгКлиента,
	0 КАК КОтгрузке,
	АналитикаУчета.Партнер,
	АналитикаУчета.Организация,
	АналитикаУчета.Контрагент,
	АналитикаУчета.Договор
ПОМЕСТИТЬ ТаблицаЗадолженностей
ИЗ
	РегистрНакопления.РасчетыСКлиентамиПоДокументам.Остатки(&КонецПериода, ) КАК Расчеты
		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаУчета
		ПО Расчеты.АналитикаУчетаПоПартнерам = АналитикаУчета.КлючАналитики
		ЛЕВОЕ СОЕДИНЕНИЕ ВсегоПросрочено КАК Остатки
		ПО Расчеты.АналитикаУчетаПоПартнерам = Остатки.АналитикаУчетаПоПартнерам
			И Расчеты.ЗаказКлиента = Остатки.ЗаказКлиента
			И Расчеты.РасчетныйДокумент = Остатки.РасчетныйДокумент
			И Расчеты.Валюта = Остатки.Валюта
ГДЕ
	АналитикаУчета.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	И Расчеты.ДолгОстаток - ЕСТЬNULL(Остатки.ДолгКлиента, 0) <> 0
	И АналитикаУчета.Организация В (&Отбор_ref_firms)
//	И АналитикаУчета.Контрагент В (&Отбор_ref_buyers)
	И АналитикаУчета.Партнер В (&Отбор_ref_buypoints)

ОБЪЕДИНИТЬ ВСЕ

ВЫБРАТЬ
	Расчеты.АналитикаУчетаПоПартнерам,
	Расчеты.ЗаказКлиента,
	Расчеты.Валюта,
	Расчеты.РасчетныйДокумент,
	Расчеты.ДатаПлатежа,
	Расчеты.НашДолг,
	Расчеты.ДолгКлиента,
	Расчеты.КОтгрузке,
	Расчеты.Партнер,
	Расчеты.Организация,
	Расчеты.Контрагент,
	Расчеты.Договор
ИЗ
	ТаблицаЗадолженностейПросроченная КАК Расчеты
;

////////////////////////////////////////////////////////////////////////////////
ВЫБРАТЬ РАЗРЕШЕННЫЕ
	ТаблицаЗадолженностей.АналитикаУчетаПоПартнерам,
	ТаблицаЗадолженностей.ЗаказКлиента,
	ТаблицаЗадолженностей.Договор КАК Договор,
	ТаблицаЗадолженностей.Валюта,
	ТаблицаЗадолженностей.РасчетныйДокумент КАК РасчетныйДокумент,
	ТаблицаЗадолженностей.РасчетныйДокумент.Дата КАК РасчетныйДокументДата,
	ТаблицаЗадолженностей.РасчетныйДокумент.Номер КАК РасчетныйДокументНомер,
	ТаблицаЗадолженностей.ДатаПлатежа КАК ДатаПлатежа,
	ТаблицаЗадолженностей.Партнер,
	ТаблицаЗадолженностей.Организация,
	ТаблицаЗадолженностей.Контрагент,
	ТаблицаЗадолженностей.НашДолг,
	ТаблицаЗадолженностей.ДолгКлиента,
	ТаблицаЗадолженностей.КОтгрузке
ИЗ
	ТаблицаЗадолженностей КАК ТаблицаЗадолженностей
ГДЕ
	ТаблицаЗадолженностей.ДолгКлиента>0"	1	"// обработка документов в ссылках
лОбъекты.Свернуть(""Партнер, Контрагент, Валюта, Организация, РасчетныйДокумент,РасчетныйДокументНомер,РасчетныйДокументДата"",""ДолгКлиента, НашДолг"");

лОбъекты.Колонки.Добавить(""ДокументПредставление"");
лОбъекты.Колонки.Добавить(""Дата"");
лОбъекты.Колонки.Добавить(""Долг"");

Для Каждого стрДоп Из лОбъекты Цикл
	Если ЗначениеЗаполнено(стрДоп.РасчетныйДокумент) Тогда
		стрДоп.ДокументПредставление = стрДоп.РасчетныйДокумент.Метаданные().Имя + "" №"" +  стрДоп.РасчетныйДокументНомер + "" от "" +стрДоп.РасчетныйДокументДата;
		стрДоп.Дата = стрДоп.РасчетныйДокументДата;
	Иначе
		стрДоп.ДокументПредставление = ""--"";
		стрДоп.Дата = лДатаОбмена;
	КонецЕсли;
	//стрДоп.Долг = ?(ЗначениеЗаполнено(стрДоп.ДолгКлиента), стрДоп.ДолгКлиента, -стрДоп.НашДолг);
	стрДоп.Долг = стрДоп.ДолгКлиента-стрДоп.НашДолг;
КонецЦикла;"				"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	Расчеты.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	Расчеты.ЗаказКлиента КАК ЗаказКлиента,
	Расчеты.Валюта КАК Валюта,
	ВЫБОР
		КОГДА Расчеты.СуммаОстаток > 0
				И Расчеты.КОплатеОстаток = 0
			ТОГДА Расчеты.СуммаОстаток
		ИНАЧЕ Расчеты.КОплатеОстаток
	КОНЕЦ КАК ДолгОстаток,
	ВЫБОР
		КОГДА Расчеты.СуммаОстаток > 0
				И Расчеты.КОплатеОстаток = 0
			ТОГДА Расчеты.СуммаОстаток
		ИНАЧЕ Расчеты.КОплатеОстаток
	КОНЕЦ КАК ДолгОстатокНаКонецПериода,
	&ДатаОстатков КАК ДатаПлатежа,
	ДОБАВИТЬКДАТЕ(&ДатаОстатков, СЕКУНДА, 1) КАК Период,
	ВЫБОР
		КОГДА Расчеты.СуммаОстаток > 0
				И Расчеты.КОплатеОстаток = 0
			ТОГДА ИСТИНА
		ИНАЧЕ ЛОЖЬ
	КОНЕЦ КАК ФактическаяЗадолженность
ПОМЕСТИТЬ ТаблицаОстатковКлиентов
ИЗ
	РегистрНакопления.РасчетыСКлиентами.Остатки(&ДатаОстатков, ) КАК Расчеты
		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСКлиентами КАК График
		ПО (Расчеты.ЗаказКлиента = График.Регистратор)
			И (Расчеты.АналитикаУчетаПоПартнерам = График.АналитикаУчетаПоПартнерам)
			И (Расчеты.ЗаказКлиента = График.ЗаказКлиента)
			И (Расчеты.Валюта = График.Валюта)
			И (&ДатаОстатков < График.Период)
			И (График.КОплате > 0)
ГДЕ
	(Расчеты.КОплатеОстаток > 0
			ИЛИ Расчеты.СуммаОстаток > 0
				И Расчеты.КОплатеОстаток = 0
				И График.Регистратор ЕСТЬ NULL )
	И Расчеты.АналитикаУчетаПоПартнерам.Организация В (&Отбор_ref_firms)
	И Расчеты.АналитикаУчетаПоПартнерам.Контрагент В (&Отбор_ref_buyers)
	И Расчеты.АналитикаУчетаПоПартнерам.Партнер В (&Отбор_ref_buypoints)
;

////////////////////////////////////////////////////////////////////////////////
ВЫБРАТЬ РАЗРЕШЕННЫЕ
	Расчеты.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	Расчеты.ЗаказКлиента КАК ЗаказКлиента,
	Расчеты.Валюта КАК Валюта,
	МАКСИМУМ(НАЧАЛОПЕРИОДА(Расчеты.ДатаПлатежа, ДЕНЬ)) КАК ДатаПлатежа,
	МАКСИМУМ(НАЧАЛОПЕРИОДА(Расчеты.Период, ДЕНЬ)) КАК Период,
	ТаблицаОстатков.ФактическаяЗадолженность КАК ФактическаяЗадолженность
ПОМЕСТИТЬ ТаблицаПериодовКлиентов
ИЗ
	РегистрНакопления.РасчетыСКлиентами КАК Расчеты
		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаОстатковКлиентов КАК ТаблицаОстатков
		ПО Расчеты.АналитикаУчетаПоПартнерам = ТаблицаОстатков.АналитикаУчетаПоПартнерам
			И Расчеты.ЗаказКлиента = ТаблицаОстатков.ЗаказКлиента
			И Расчеты.Валюта = ТаблицаОстатков.Валюта
			И (ТаблицаОстатков.ДолгОстаток <> 0)
ГДЕ
	Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	И Расчеты.Активность
	И Расчеты.Период <= &ДатаОстатков
	И Расчеты.Период < ТаблицаОстатков.Период
	И Расчеты.КОплате <> 0
	И НЕ ТаблицаОстатков.ФактическаяЗадолженность

СГРУППИРОВАТЬ ПО
	Расчеты.АналитикаУчетаПоПартнерам,
	Расчеты.ЗаказКлиента,
	Расчеты.Валюта,
	ТаблицаОстатков.ФактическаяЗадолженность

ОБЪЕДИНИТЬ ВСЕ

ВЫБРАТЬ
	Расчеты.АналитикаУчетаПоПартнерам,
	Расчеты.ЗаказКлиента,
	Расчеты.Валюта,
	МАКСИМУМ(НАЧАЛОПЕРИОДА(Расчеты.Период, ДЕНЬ)),
	МАКСИМУМ(НАЧАЛОПЕРИОДА(Расчеты.Период, ДЕНЬ)),
	ТаблицаОстатков.ФактическаяЗадолженность
ИЗ
	РегистрНакопления.РасчетыСКлиентами КАК Расчеты
		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаОстатковКлиентов КАК ТаблицаОстатков
		ПО Расчеты.АналитикаУчетаПоПартнерам = ТаблицаОстатков.АналитикаУчетаПоПартнерам
			И Расчеты.ЗаказКлиента = ТаблицаОстатков.ЗаказКлиента
			И Расчеты.Валюта = ТаблицаОстатков.Валюта
			И (ТаблицаОстатков.ДолгОстаток <> 0)
ГДЕ
	Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	И Расчеты.Активность
	И Расчеты.Период <= &ДатаОстатков
	И Расчеты.Период < ТаблицаОстатков.Период
	И Расчеты.Сумма <> 0
	И Расчеты.КОплате = 0
	И ТаблицаОстатков.ФактическаяЗадолженность

СГРУППИРОВАТЬ ПО
	Расчеты.АналитикаУчетаПоПартнерам,
	Расчеты.ЗаказКлиента,
	Расчеты.Валюта,
	ТаблицаОстатков.ФактическаяЗадолженность
;

////////////////////////////////////////////////////////////////////////////////
ВЫБРАТЬ РАЗРЕШЕННЫЕ
	Периоды.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	Периоды.ЗаказКлиента КАК ЗаказКлиента,
	Периоды.Валюта КАК Валюта,
	Периоды.Период КАК Период,
	Периоды.ДатаПлатежа КАК ДатаПлатежа,
	СУММА(ЕСТЬNULL(Расчеты.КОплате, 0)) КАК Долг,
	Периоды.ФактическаяЗадолженность КАК ФактическаяЗадолженность
ПОМЕСТИТЬ ТаблицаОтгрузокКлиентов
ИЗ
	ТаблицаПериодовКлиентов КАК Периоды
		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСКлиентами КАК Расчеты
		ПО Периоды.АналитикаУчетаПоПартнерам = Расчеты.АналитикаУчетаПоПартнерам
			И Периоды.ЗаказКлиента = Расчеты.ЗаказКлиента
			И Периоды.Валюта = Расчеты.Валюта
			И (Расчеты.Активность)
			И (Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
			И (Расчеты.Период МЕЖДУ Периоды.Период И КОНЕЦПЕРИОДА(Периоды.Период, ДЕНЬ))
			И (Расчеты.КОплате <> 0)
ГДЕ
	НЕ Периоды.ФактическаяЗадолженность

СГРУППИРОВАТЬ ПО
	Периоды.АналитикаУчетаПоПартнерам,
	Периоды.ЗаказКлиента,
	Периоды.Валюта,
	Периоды.Период,
	Периоды.ДатаПлатежа,
	Периоды.ФактическаяЗадолженность

ОБЪЕДИНИТЬ ВСЕ

ВЫБРАТЬ
	Периоды.АналитикаУчетаПоПартнерам,
	Периоды.ЗаказКлиента,
	Периоды.Валюта,
	Периоды.Период,
	Периоды.ДатаПлатежа,
	СУММА(ЕСТЬNULL(Расчеты.Сумма, 0)),
	Периоды.ФактическаяЗадолженность
ИЗ
	ТаблицаПериодовКлиентов КАК Периоды
		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСКлиентами КАК Расчеты
		ПО Периоды.АналитикаУчетаПоПартнерам = Расчеты.АналитикаУчетаПоПартнерам
			И Периоды.ЗаказКлиента = Расчеты.ЗаказКлиента
			И Периоды.Валюта = Расчеты.Валюта
			И (Расчеты.Активность)
			И (Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
			И (Расчеты.Период МЕЖДУ Периоды.Период И КОНЕЦПЕРИОДА(Периоды.Период, ДЕНЬ))
			И (Расчеты.Сумма <> 0)
ГДЕ
	Периоды.ФактическаяЗадолженность

СГРУППИРОВАТЬ ПО
	Периоды.АналитикаУчетаПоПартнерам,
	Периоды.ЗаказКлиента,
	Периоды.Валюта,
	Периоды.Период,
	Периоды.ДатаПлатежа,
	Периоды.ФактическаяЗадолженность
;

////////////////////////////////////////////////////////////////////////////////
ВЫБРАТЬ
	Остатки.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	Остатки.ЗаказКлиента КАК ЗаказКлиента,
	Остатки.Валюта КАК Валюта,
	ВЫБОР
		КОГДА Остатки.ДолгОстаток > ЕСТЬNULL(Отгрузки.Долг, 0)
			ТОГДА Остатки.ДолгОстаток - ЕСТЬNULL(Отгрузки.Долг, 0)
		ИНАЧЕ 0
	КОНЕЦ КАК НовыйДолгОстаток,
	Остатки.ДолгОстатокНаКонецПериода КАК ДолгОстатокНаКонецПериода,
	Отгрузки.Период КАК Период,
	ЕСТЬNULL(Отгрузки.ДатаПлатежа, Остатки.ДатаПлатежа) КАК ДатаПлатежа,
	Остатки.ФактическаяЗадолженность КАК ФактическаяЗадолженность
ПОМЕСТИТЬ НовыеОстаткиКлиентов
ИЗ
	ТаблицаОстатковКлиентов КАК Остатки
		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтгрузокКлиентов КАК Отгрузки
		ПО Остатки.АналитикаУчетаПоПартнерам = Отгрузки.АналитикаУчетаПоПартнерам
			И Остатки.ЗаказКлиента = Отгрузки.ЗаказКлиента
			И Остатки.Валюта = Отгрузки.Валюта
			И (Остатки.ДолгОстаток <> 0)
ГДЕ
	НЕ Остатки.ФактическаяЗадолженность

ОБЪЕДИНИТЬ ВСЕ

ВЫБРАТЬ
	Остатки.АналитикаУчетаПоПартнерам,
	Остатки.ЗаказКлиента,
	Остатки.Валюта,
	ВЫБОР
		КОГДА Остатки.ДолгОстаток > ЕСТЬNULL(Отгрузки.Долг, 0)
			ТОГДА Остатки.ДолгОстаток - ЕСТЬNULL(Отгрузки.Долг, 0)
		ИНАЧЕ 0
	КОНЕЦ,
	Остатки.ДолгОстатокНаКонецПериода,
	Отгрузки.Период,
	ЕСТЬNULL(Отгрузки.ДатаПлатежа, Остатки.ДатаПлатежа),
	Остатки.ФактическаяЗадолженность
ИЗ
	ТаблицаОстатковКлиентов КАК Остатки
		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтгрузокКлиентов КАК Отгрузки
		ПО Остатки.АналитикаУчетаПоПартнерам = Отгрузки.АналитикаУчетаПоПартнерам
			И Остатки.ЗаказКлиента = Отгрузки.ЗаказКлиента
			И Остатки.Валюта = Отгрузки.Валюта
			И (Остатки.ДолгОстаток <> 0)
ГДЕ
	Остатки.ФактическаяЗадолженность
;

////////////////////////////////////////////////////////////////////////////////
УНИЧТОЖИТЬ ТаблицаОстатковКлиентов
;

////////////////////////////////////////////////////////////////////////////////
УНИЧТОЖИТЬ ТаблицаОтгрузокКлиентов
;

////////////////////////////////////////////////////////////////////////////////
ВЫБРАТЬ
	Остатки.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	Остатки.ЗаказКлиента КАК ЗаказКлиента,
	Остатки.Валюта КАК Валюта,
	Остатки.Период КАК Период,
	Остатки.ДатаПлатежа КАК ДатаПлатежа,
	Остатки.НовыйДолгОстаток КАК ДолгОстаток,
	Остатки.ДолгОстатокНаКонецПериода КАК ДолгОстатокНаКонецПериода,
	Остатки.ФактическаяЗадолженность КАК ФактическаяЗадолженность
ПОМЕСТИТЬ ТаблицаОстатковКлиентов
ИЗ
	НовыеОстаткиКлиентов КАК Остатки

ИНДЕКСИРОВАТЬ ПО
	АналитикаУчетаПоПартнерам,
	ЗаказКлиента,
	Валюта
;

////////////////////////////////////////////////////////////////////////////////
УНИЧТОЖИТЬ НовыеОстаткиКлиентов
;

////////////////////////////////////////////////////////////////////////////////
ВЫБРАТЬ ПЕРВЫЕ 1
	1 КАК Поле1
ИЗ
	ТаблицаПериодовКлиентов КАК ТаблицаПериодовКлиентов
;

////////////////////////////////////////////////////////////////////////////////
ВЫБРАТЬ РАЗРЕШЕННЫЕ
	Расчеты.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	Расчеты.ЗаказКлиента КАК ЗаказКлиента,
	Расчеты.РасчетныйДокумент КАК РасчетныйДокумент,
	Расчеты.Валюта КАК Валюта,
	ТаблицаОстатков.ДатаПлатежа КАК ДатаПлатежа,
	ТаблицаОстатков.ДолгОстатокНаКонецПериода КАК Долг
ПОМЕСТИТЬ ТаблицаОстатковКлиентовПоДокументам
ИЗ
	РегистрНакопления.РасчетыСКлиентамиПоДокументам.Остатки(&ДатаОстатков, ) КАК Расчеты
		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаОстатковКлиентов КАК ТаблицаОстатков
		ПО Расчеты.АналитикаУчетаПоПартнерам = ТаблицаОстатков.АналитикаУчетаПоПартнерам
			И Расчеты.ЗаказКлиента = ТаблицаОстатков.ЗаказКлиента
			И Расчеты.Валюта = ТаблицаОстатков.Валюта
ГДЕ
	Расчеты.ДолгОстаток > 0
;

////////////////////////////////////////////////////////////////////////////////
УНИЧТОЖИТЬ ТаблицаОстатковКлиентов
;

////////////////////////////////////////////////////////////////////////////////
ВЫБРАТЬ РАЗЛИЧНЫЕ
	Расчеты.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	Расчеты.ЗаказКлиента КАК ЗаказКлиента,
	Расчеты.РасчетныйДокумент КАК РасчетныйДокумент,
	Расчеты.Валюта КАК Валюта,
	Расчеты.ДатаПлатежа КАК ДатаПлатежа,
	Расчеты.Долг КАК КОплате,
	Расчеты.Долг КАК ДолгОстаток
ПОМЕСТИТЬ ТаблицаОстатковКлиентов
ИЗ
	ТаблицаОстатковКлиентовПоДокументам КАК Расчеты
;

////////////////////////////////////////////////////////////////////////////////
ВЫБРАТЬ РАЗРЕШЕННЫЕ
	КурсВалюты.Валюта КАК Валюта,
	КурсВалюты.Курс * КурсВалютыОтчета.Кратность / (КурсВалюты.Кратность * КурсВалютыОтчета.Курс) КАК КоэффициентПересчета
ПОМЕСТИТЬ КурсыВалют
ИЗ
	РегистрСведений.КурсыВалют.СрезПоследних(&ДатаОстатков, ) КАК КурсВалюты
		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&ДатаОстатков, Валюта = &Валюта) КАК КурсВалютыОтчета
		ПО (ИСТИНА)
ГДЕ
	КурсВалюты.Кратность <> 0
	И КурсВалютыОтчета.Курс <> 0
;

////////////////////////////////////////////////////////////////////////////////
ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	Расчеты.АналитикаУчетаПоПартнерам,
	Расчеты.ЗаказКлиента,
	Расчеты.Валюта,
	Расчеты.РасчетныйДокумент,
	Остатки.ДатаПлатежа КАК ДатаПлатежа,
	-(Расчеты.КВозвратуОстаток + Расчеты.ПредоплатаОстаток) КАК НашДолг,
	ВЫБОР
		КОГДА &ДанныеОтчета = 1
			ТОГДА ВЫБОР
					КОГДА Расчеты.ДолгУпрОстаток + Расчеты.ПредоплатаУпрОстаток < 0
						ТОГДА -(Расчеты.ДолгУпрОстаток + Расчеты.ПредоплатаУпрОстаток)
					ИНАЧЕ 0
				КОНЕЦ
		КОГДА &ДанныеОтчета = 3
			ТОГДА ВЫБОР
					КОГДА Расчеты.ДолгРеглОстаток + Расчеты.ПредоплатаРеглОстаток < 0
						ТОГДА -(Расчеты.ДолгРеглОстаток + Расчеты.ПредоплатаРеглОстаток)
					ИНАЧЕ 0
				КОНЕЦ
	КОНЕЦ КАК НашДолгВВалютеОтчета,
	ВЫБОР
		КОГДА Расчеты.ДолгОстаток > ЕСТЬNULL(Остатки.КОплате, Расчеты.ДолгОстаток)
			ТОГДА Остатки.КОплате
		ИНАЧЕ Расчеты.ДолгОстаток
	КОНЕЦ КАК ДолгКлиента,
	ВЫБОР
		КОГДА &ДанныеОтчета = 1
			ТОГДА ВЫБОР
					КОГДА Расчеты.ДолгОстаток > ЕСТЬNULL(Остатки.КОплате, Расчеты.ДолгОстаток)
						ТОГДА ВЫРАЗИТЬ(Расчеты.ДолгУпрОстаток / Расчеты.ДолгОстаток * Остатки.КОплате КАК ЧИСЛО(15, 2))
					ИНАЧЕ Расчеты.ДолгУпрОстаток
				КОНЕЦ
		КОГДА &ДанныеОтчета = 3
			ТОГДА ВЫБОР
					КОГДА Расчеты.ДолгОстаток > ЕСТЬNULL(Остатки.КОплате, Расчеты.ДолгОстаток)
						ТОГДА ВЫРАЗИТЬ(Расчеты.ДолгРеглОстаток / Расчеты.ДолгОстаток * Остатки.КОплате КАК ЧИСЛО(15, 2))
					ИНАЧЕ Расчеты.ДолгРеглОстаток
				КОНЕЦ
	КОНЕЦ КАК ДолгКлиентаВВалютеОтчета,
	0 КАК КОтгрузке,
	0 КАК КОтгрузкеВВалютеОтчета,
	АналитикаУчета.Партнер,
	АналитикаУчета.Организация,
	АналитикаУчета.Контрагент,
	АналитикаУчета.Договор
ПОМЕСТИТЬ ТаблицаЗадолженностейПросроченная
ИЗ
	РегистрНакопления.РасчетыСКлиентамиПоДокументам.Остатки(&ДатаОстатков, ) КАК Расчеты
		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаУчета
		ПО Расчеты.АналитикаУчетаПоПартнерам = АналитикаУчета.КлючАналитики
		ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют КАК КурсыВалют
		ПО Расчеты.Валюта = КурсыВалют.Валюта
		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОстатковКлиентов КАК Остатки
		ПО Расчеты.АналитикаУчетаПоПартнерам = Остатки.АналитикаУчетаПоПартнерам
			И Расчеты.ЗаказКлиента = Остатки.ЗаказКлиента
			И Расчеты.РасчетныйДокумент = Остатки.РасчетныйДокумент
			И Расчеты.Валюта = Остатки.Валюта
ГДЕ
	АналитикаУчета.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	И АналитикаУчета.Организация В (&Отбор_ref_firms)
	И АналитикаУчета.Контрагент В (&Отбор_ref_buyers)
	И АналитикаУчета.Партнер В (&Отбор_ref_buypoints)

ОБЪЕДИНИТЬ ВСЕ

ВЫБРАТЬ
	Расчеты.АналитикаУчетаПоПартнерам,
	Расчеты.ЗаказКлиента,
	Расчеты.Валюта,
	NULL,
	ДАТАВРЕМЯ(1, 1, 1),
	0,
	0,
	0,
	0,
	ВЫБОР
		КОГДА Расчеты.КОтгрузкеОстаток < 0
			ТОГДА -Расчеты.КОтгрузкеОстаток
		ИНАЧЕ 0
	КОНЕЦ,
	ВЫБОР
		КОГДА Расчеты.КОтгрузкеОстаток < 0
			ТОГДА -Расчеты.КОтгрузкеОстаток
		ИНАЧЕ 0
	КОНЕЦ * ЕСТЬNULL(КурсыВалют.КоэффициентПересчета, 1),
	АналитикаУчета.Партнер,
	АналитикаУчета.Организация,
	АналитикаУчета.Контрагент,
	АналитикаУчета.Договор
ИЗ
	РегистрНакопления.РасчетыСКлиентами.Остатки(&ДатаОстатков, ) КАК Расчеты
		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаУчета
		ПО Расчеты.АналитикаУчетаПоПартнерам = АналитикаУчета.КлючАналитики
		ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют КАК КурсыВалют
		ПО Расчеты.Валюта = КурсыВалют.Валюта
ГДЕ
	АналитикаУчета.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	И АналитикаУчета.Организация В (&Отбор_ref_firms)
	И АналитикаУчета.Контрагент В (&Отбор_ref_buyers)
	И АналитикаУчета.Партнер В (&Отбор_ref_buypoints)
;

////////////////////////////////////////////////////////////////////////////////
ВЫБРАТЬ
	Таблица.АналитикаУчетаПоПартнерам,
	Таблица.ЗаказКлиента,
	Таблица.РасчетныйДокумент,
	Таблица.Валюта,
	СУММА(Таблица.ДолгКлиента) КАК ДолгКлиента,
	СУММА(Таблица.ДолгКлиентаВВалютеОтчета) КАК ДолгКлиентаВВалютеОтчета
ПОМЕСТИТЬ ВсегоПросрочено
ИЗ
	ТаблицаЗадолженностейПросроченная КАК Таблица

СГРУППИРОВАТЬ ПО
	Таблица.АналитикаУчетаПоПартнерам,
	Таблица.ЗаказКлиента,
	Таблица.РасчетныйДокумент,
	Таблица.Валюта
;

////////////////////////////////////////////////////////////////////////////////
ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	Расчеты.АналитикаУчетаПоПартнерам,
	Расчеты.ЗаказКлиента,
	Расчеты.Валюта,
	Расчеты.РасчетныйДокумент,
	&ДатаОтчета КАК ДатаПлатежа,
	-(Расчеты.КВозвратуОстаток + Расчеты.ПредоплатаОстаток) КАК НашДолг,
	ВЫБОР
		КОГДА &ДанныеОтчета = 1
			ТОГДА ВЫБОР
					КОГДА Расчеты.ДолгУпрОстаток + Расчеты.ПредоплатаУпрОстаток < 0
						ТОГДА -(Расчеты.ДолгУпрОстаток + Расчеты.ПредоплатаУпрОстаток)
					ИНАЧЕ 0
				КОНЕЦ
		КОГДА &ДанныеОтчета = 3
			ТОГДА ВЫБОР
					КОГДА Расчеты.ДолгРеглОстаток + Расчеты.ПредоплатаРеглОстаток < 0
						ТОГДА -(Расчеты.ДолгРеглОстаток + Расчеты.ПредоплатаРеглОстаток)
					ИНАЧЕ 0
				КОНЕЦ
	КОНЕЦ КАК НашДолгВВалютеОтчета,
	Расчеты.ДолгОстаток - ЕСТЬNULL(Остатки.ДолгКлиента, Расчеты.ДолгОстаток) КАК ДолгКлиента,
	ВЫБОР
		КОГДА &ДанныеОтчета = 1
			ТОГДА Расчеты.ДолгУпрОстаток - Остатки.ДолгКлиентаВВалютеОтчета
		КОГДА &ДанныеОтчета = 3
			ТОГДА Расчеты.ДолгРеглОстаток - Остатки.ДолгКлиентаВВалютеОтчета
	КОНЕЦ КАК ДолгКлиентаВВалютеОтчета,
	0 КАК КОтгрузке,
	0 КАК КОтгрузкеВВалютеОтчета,
	АналитикаУчета.Партнер,
	АналитикаУчета.Организация,
	АналитикаУчета.Контрагент,
	АналитикаУчета.Договор
ПОМЕСТИТЬ ТаблицаЗадолженностей
ИЗ
	РегистрНакопления.РасчетыСКлиентамиПоДокументам.Остатки(&ДатаОстатков, ) КАК Расчеты
		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаУчета
		ПО Расчеты.АналитикаУчетаПоПартнерам = АналитикаУчета.КлючАналитики
		ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют КАК КурсыВалют
		ПО Расчеты.Валюта = КурсыВалют.Валюта
		ЛЕВОЕ СОЕДИНЕНИЕ ВсегоПросрочено КАК Остатки
		ПО Расчеты.АналитикаУчетаПоПартнерам = Остатки.АналитикаУчетаПоПартнерам
			И Расчеты.ЗаказКлиента = Остатки.ЗаказКлиента
			И Расчеты.РасчетныйДокумент = Остатки.РасчетныйДокумент
			И Расчеты.Валюта = Остатки.Валюта
ГДЕ
	АналитикаУчета.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	И Расчеты.ДолгОстаток - ЕСТЬNULL(Остатки.ДолгКлиента, 0) <> 0
	И АналитикаУчета.Организация В (&Отбор_ref_firms)
	И АналитикаУчета.Контрагент В (&Отбор_ref_buyers)
	И АналитикаУчета.Партнер В (&Отбор_ref_buypoints)

ОБЪЕДИНИТЬ ВСЕ

ВЫБРАТЬ
	Расчеты.АналитикаУчетаПоПартнерам,
	Расчеты.ЗаказКлиента,
	Расчеты.Валюта,
	Расчеты.РасчетныйДокумент,
	Расчеты.ДатаПлатежа,
	Расчеты.НашДолг,
	Расчеты.НашДолгВВалютеОтчета,
	Расчеты.ДолгКлиента,
	Расчеты.ДолгКлиентаВВалютеОтчета,
	Расчеты.КОтгрузке,
	Расчеты.КОтгрузкеВВалютеОтчета,
	Расчеты.Партнер,
	Расчеты.Организация,
	Расчеты.Контрагент,
	Расчеты.Договор
ИЗ
	ТаблицаЗадолженностейПросроченная КАК Расчеты
;

////////////////////////////////////////////////////////////////////////////////
ВЫБРАТЬ РАЗРЕШЕННЫЕ
	ТаблицаЗадолженностей.АналитикаУчетаПоПартнерам,
	ТаблицаЗадолженностей.ЗаказКлиента,
	ТаблицаЗадолженностей.Договор КАК Договор,
	ТаблицаЗадолженностей.Валюта,
	ТаблицаЗадолженностей.РасчетныйДокумент КАК РасчетныйДокумент,
	ТаблицаЗадолженностей.ДатаПлатежа КАК ДатаПлатежа,
	ТаблицаЗадолженностей.Партнер,
	ТаблицаЗадолженностей.Организация,
	ТаблицаЗадолженностей.Контрагент,
	ТаблицаЗадолженностей.НашДолг,
	ТаблицаЗадолженностей.ДолгКлиента,
	ТаблицаЗадолженностей.КОтгрузке,
	ТаблицаЗадолженностей.НашДолгВВалютеОтчета,
	ТаблицаЗадолженностей.ДолгКлиентаВВалютеОтчета,
	ТаблицаЗадолженностей.КОтгрузкеВВалютеОтчета
ИЗ
	ТаблицаЗадолженностей КАК ТаблицаЗадолженностей"	
buyer	Контрагент	*ref_buyers	Ссылка на владельца / покупателя		ПАРАМЕТР							
counteragent	Контрагент	*ref_counteragents	Ссылка на контрагента / юр. лицо									
buypoint	Партнер	ref_buypoints	Ссылка на торговую точку		ПАРАМЕТР							
agreement	*ДоговорКонтрагента	*ref_agreements	Ссылка на договор									
firm	Организация	ref_firms	Ссылка на собственную фирму		ПАРАМЕТР							
invoice	*РасчетныйДокумент	*doc_invoices	Ссылка на документ отгрузки товара									
date	Дата		Дата возникновения задолженности									
amount	Долг		Сумма задолженности									
docinfo	ДокументПредставление		Описание документа задолженности									
												
												
Цены товаров												
Мобиком	Источник	Ссылка	Описание		Запрос	Есть условие	Доп. при выгрузке	Доп. при загрузке				
deleted			Пометка на удаление		"ВЫБРАТЬ РАЗЛИЧНЫЕ
	ЦеныНоменклатурыСрезПоследних.Номенклатура,
	ЦеныНоменклатурыСрезПоследних.ВидЦены,
	ЦеныНоменклатурыСрезПоследних.Валюта,
	ЦеныНоменклатурыСрезПоследних.Цена * КурсыВалютСрезПоследних.Курс КАК Цена,
	ВЫБОР
		КОГДА ЦеныНоменклатурыСрезПоследних.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
			ТОГДА ЦеныНоменклатурыСрезПоследних.Номенклатура.ЕдиницаИзмерения
		ИНАЧЕ ЦеныНоменклатурыСрезПоследних.Упаковка.ЕдиницаИзмерения
	КОНЕЦ КАК ЕдиницаИзмерения
ИЗ
	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&КонецПериода, ) КАК ЦеныНоменклатурыСрезПоследних
		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&КонецПериода, ) КАК КурсыВалютСрезПоследних
		ПО ЦеныНоменклатурыСрезПоследних.Валюта = КурсыВалютСрезПоследних.Валюта
ГДЕ
	ЦеныНоменклатурыСрезПоследних.Цена <> 0
	И КурсыВалютСрезПоследних.Курс <> 0"	1						
sku	Номенклатура	ref_skus	Ссылка на товар		ЦеныНоменклатурыСрезПоследних.Номенклатура							
pricetype	ВидЦены	ref_pricetypes	Ссылка на тип цены		ЦеныНоменклатурыСрезПоследних.ВидЦены							
unit	ЕдиницаИзмерения	*ref_units	Ссылка на единицу измерения		ЦеныНоменклатурыСрезПоследних.Упаковка.ЕдиницаИзмерения							
price	Цена		Цена									
												
												
Статусы состояния документа												
Мобиком	Источник	Ссылка	Описание		Запрос	Есть условие	Доп. при выгрузке	Доп. при загрузке				
name	Наименование		Наименование		*	0						
printcode	Код		Код объекта									
deleted	ПометкаУдаления		Пометка на удаление									
												
												
Типы оплаты												
Мобиком	Источник	Ссылка	Описание		Запрос	Есть условие	Доп. при выгрузке	Доп. при загрузке				
name	Наименование		Наименование		*	0						
printcode	Код		Код объекта									
deleted	ПометкаУдаления		Пометка на удаление									
												
												
Продажи												
Мобиком	Источник	Ссылка	Описание		Запрос	Есть условие	Доп. при выгрузке	Доп. при загрузке				
datetime	Дата		Дата и время документа		"ВЫБРАТЬ
	РеализацияТоваровУслуг.Ссылка,
	РеализацияТоваровУслуг.Соглашение.ВидЦен КАК ВидЦен,
	РеализацияТоваровУслуг.Менеджер,
	РеализацияТоваровУслуг.Организация,
	РеализацияТоваровУслуг.Склад,
	РеализацияТоваровУслуг.Контрагент,
	РеализацияТоваровУслуг.Партнер,
	РеализацияТоваровУслуг.Соглашение,
	РеализацияТоваровУслуг.ПометкаУдаления,
	РеализацияТоваровУслуг.Проведен,
	РеализацияТоваровУслуг.Дата,
	РеализацияТоваровУслуг.Номер,
	РеализацияТоваровУслуг.Комментарий,
	ИСТИНА КАК УчитыватьНДС,
	РеализацияТоваровУслуг.ЦенаВключаетНДС,
	РеализацияТоваровУслуг.СуммаДокумента,
	РеализацияТоваровУслуг.Товары.(
		Номенклатура,
		Упаковка.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
//		Коэффициент,
		Количество,
		ВЫБОР
			КОГДА РеализацияТоваровУслуг.Товары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
				ТОГДА 0.18
			КОГДА РеализацияТоваровУслуг.Товары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
				ТОГДА 0.1
			ИНАЧЕ 0
		КОНЕЦ КАК СтавкаНДС,
		ВидЦены,
		Цена
	) КАК Товары
ИЗ
	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
ГДЕ
	РеализацияТоваровУслуг.Дата МЕЖДУ &НачалоПериода И &КонецПериода"	1	"// данные для формирования sid ref_agreements
лОбъекты.Колонки.Добавить(""СоглашениеВнеш"");
лПоиск = Новый Структура(""Соглашение,Партнер"");
Для Каждого стрДоп Из лОбъекты Цикл
	лПоиск.Вставить(""Соглашение"",стрДоп.Соглашение);
	лПоиск.Вставить(""Партнер"",стрДоп.Партнер);
	
	мстр = лКонстанты.ДоговорПартнер.НайтиСтроки(лПоиск);
	Если мстр.Количество()=0 Тогда
		стрДоп.СоглашениеВнеш = """";
		СообщитьПодробно(""Неподходящее соглашение. ""+стрДоп.Ссылка, СтатусСообщения.Внимание, Истина, ЗаписьВЖурнал);
	Иначе
		стрДоп.СоглашениеВнеш = мстр[0].Ссылка;
	КонецЕсли;
	
//	стрДоп.СоглашениеВнеш = """"+XMLСтрока(стрДоп.Соглашение)+""***""+XMLСтрока(стрДоп.Партнер);
КонецЦикла;"					
printcode	Номер		Код объекта									
deleted	ПометкаУдаления		Пометка на удаление									
docstate		*ref_docstates	Ссылка на статус состояния документа									
pricetype	ВидЦен	*ref_pricetypes	Ссылка на тип цены		РеализацияТоваровУслуг.Соглашение.ВидЦен							
employee	*Менеджер	ref_employees	Ссылка на сотрудника									
firm	Организация	ref_firms	Ссылка на собственную фирму		РеализацияТоваровУслуг.Организация							
store	Склад	ref_stores	Ссылка на склад		РеализацияТоваровУслуг.Склад							
buyer	Контрагент	*ref_buyers	Ссылка на владельца / покупателя		РеализацияТоваровУслуг.Контрагент							
buypoint	Партнер	ref_buypoints	Ссылка на торговую точку		РеализацияТоваровУслуг.Партнер							
counteragent	Контрагент	*ref_counteragents	Ссылка на контрагента / юр. лицо / плательщика									
agreement	СоглашениеВнеш	ref_agreements	Ссылка на договор		РеализацияТоваровУслуг.Соглашение							
paytype		*ref_paytypes	Ссылка на тип оплаты									
shipping			Фактическая дата и время отгрузки товара									
comment	Комментарий		Произвольный комментарий									
extrarate			Процент общей наценки / скидки на документ									
includevat	ЦенаВключаетНДС		НДС включен в сумму									
usevat	УчитыватьНДС		Учитывать НДС									
amount	СуммаДокумента		Сумма									
processed	Проведен		Признак проведения документа									
												
Продажи (ТЧ)												
Мобиком	Источник	Ссылка	Описание		Запрос	Есть условие	Доп. при выгрузке	Доп. при загрузке				
deleted			Пометка на удаление		Товары	Х						
sku	Номенклатура	ref_skus	Ссылка на товар		РеализацияТоваровУслуг.Товары.Номенклатура							
unit	ЕдиницаИзмерения	*ref_units	Ссылка на единицу измерения									
pricetype	ВидЦены	*ref_pricetypes	Ссылка на тип цены									
factor	*Коэффициент		Коэффициент пересчета в базовую единицу измерения									
quantity	Количество		Количество в выбранной единице измерения									
extrarate			Процент наценки / скидки									
vatrate	СтавкаНДС		Процент ставки НДС									
price	Цена		Цена за выбранную единицу измерения без учета скидок / наценок									
												
												
Заявки												
Мобиком	Источник	Ссылка	Описание		Запрос	Есть условие	Доп. при выгрузке	Доп. при загрузке	В конце загрузки док.			
					Х	Х		"// шапка
Если лПеременные.Свойство(""Соглашение"") Тогда
лОбъект.Соглашение = XMLЗначение(ТипЗнч(лОбъект.Соглашение),СтрПолучитьСтроку(СтрЗаменить(лПеременные.Соглашение,""***"",Символы.ПС),1));
КонецЕсли;

лПеременные.Вставить(""УчитыватьНДС"", Истина);
//лОбъект.ЦенаВключаетНДС = лОбъект.ВидЦены.ЦенаВключаетНДС;

лОбъект.Валюта = Константы.ВалютаРегламентированногоУчета.Получить();
лОбъект.НалогообложениеНДС	= ?(лПеременные.УчитыватьНДС, Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС, Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);

//лОбъект.БанковскийСчет = лОбъект.Организация.ОсновнойБанковскийСчет;

лОбъект.СпособДоставки = Перечисления.СпособыДоставки.ДоКлиента;
лРегистрАдрес = лОбъект.Партнер.КонтактнаяИнформация.НайтиСтроки(новый Структура(""Вид"", Справочники.ВидыКонтактнойИнформации.АдресПартнера));
лОбъект.АдресДоставки = ?(лРегистрАдрес.Количество() > 0, СокрЛП(лРегистрАдрес[0].Представление), """");

лОбъект.СкидкиРассчитаны = Истина;

лОбъект.Статус = Перечисления.СтатусыЗаказовКлиентов.КОтгрузке; 
лОбъект.Приоритет = Справочники.Приоритеты.НайтиПоНаименованию(""Средний"");
лОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияКлиенту;
//лОбъект.Менеджер = ПолучитьСотрудникаПоФизЛицу(лСотрудник);
лОбъект.Подразделение = лОбъект.Менеджер.Подразделение;

лОбъект.НеОтгружатьЧастями = Истина;
лОбъект.ДатаОтгрузки = лОбъект.ЖелаемаяДатаОтгрузки;

лОбъект.УстановитьВремя(РежимАвтоВремя.ТекущееИлиПоследним);
//лОбъект.УстановитьНовыйНомер(лОбъект.Организация.Префикс);

Если ЗначениеЗаполнено(лОбъект.Соглашение) Тогда
	лОбъект.ЗаполнитьУсловияПродажПоCоглашению();
ИначеЕсли ЗначениеЗаполнено(лОбъект.Партнер) Тогда
	УсловияПродажПоУмолчанию = ПродажиСервер.ПолучитьУсловияПродажПоУмолчанию(лОбъект.Партнер);
	Если УсловияПродажПоУмолчанию <> Неопределено И НЕ УсловияПродажПоУмолчанию.Соглашение.Пустая() Тогда
		лОбъект.Соглашение = УсловияПродажПоУмолчанию.Соглашение;
		лОбъект.ЗаполнитьУсловияПродаж(УсловияПродажПоУмолчанию);
		//ПродажиСервер.ЗаполнитьЦеныПоСоглашению(лОбъект, ""Товары"", Истина);
	КонецЕсли;
КонецЕсли;

// дописываем вариант графика оплаты по умолчанию
лОбъект.ЭтапыГрафикаОплаты.Очистить();
лГрафик = лОбъект.ЭтапыГрафикаОплаты.Добавить();
лГрафик.ВариантОплаты = Перечисления.ВариантыОплатыКлиентом.КредитПослеОтгрузки;
лГрафик.ДатаПлатежа = лОбъект.ЖелаемаяДатаОтгрузки;
лГрафик.ПроцентПлатежа = 100;
лГрафик.СуммаПлатежа = лОбъект.СуммаДокумента;
//ПродажиСервер.ЗаполнитьЭтапыГрафикаОплатыПоСоглашению(лОбъект, лОбъект.СуммаДокумента, 0, Ложь);

СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруПересчетаСуммыНДСВСтрокеТЧ(лОбъект);
//СтруктураДействийЗаполнитьЦены.Вставить(""ПересчитатьСумму"");
//СтруктураДействийЗаполнитьЦены.Вставить(""ПересчитатьСуммуНДС"", СтруктураПересчетаСуммы);
//СтруктураДействийЗаполнитьЦены.Вставить(""ПересчитатьСуммуСНДС"", СтруктураПересчетаСуммы);
//СтруктураДействийЗаполнитьЦены.Вставить(""ПересчитатьСуммуРучнойСкидки"");
//СтруктураДействийЗаполнитьЦены.Вставить(""ОчиститьАвтоматическуюСкидку"");

СтруктураДействийОбработатьСтрокуЗаказа.Вставить(""ЗаполнитьЦенуПродажи"", ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруЗаполненияЦеныВСтрокеТЧ(лОбъект));

//СтруктураДействийОбработатьСтрокуЗаказа.Вставить(""ЗаполнитьУсловияПродаж"", ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруЗаполненияУсловийПродажВСтрокеТЧ(лОбъект));

СтруктураДействийОбработатьСтрокуЗаказа.Вставить(""ПересчитатьСуммуРучнойСкидки"");
СтруктураДействийОбработатьСтрокуЗаказа.Вставить(""ПересчитатьСумму"");
СтруктураДействийОбработатьСтрокуЗаказа.Вставить(""ПересчитатьСуммуСУчетомРучнойСкидки"", Новый Структура(""Очищать"", Ложь));
СтруктураДействийОбработатьСтрокуЗаказа.Вставить(""ПересчитатьСуммуСУчетомАвтоматическойСкидки"", Новый Структура(""Очищать"", Ложь));
СтруктураДействийОбработатьСтрокуЗаказа.Вставить(""ПересчитатьСуммуНДС"", СтруктураПересчетаСуммы);
СтруктураДействийОбработатьСтрокуЗаказа.Вставить(""ПересчитатьСуммуСНДС"", СтруктураПересчетаСуммы);
СтруктураДействийОбработатьСтрокуЗаказа.Вставить(""ЗаполнитьДубликатыЗависимыхРеквизитов"", Новый Структура(""Сумма, СуммаНДС, СуммаСНДС, СуммаАвтоматическойСкидки, СуммаРучнойСкидки""));"	"// финиш
ОбработкаТабличнойЧастиСервер.ОбработатьТЧ(лОбъект.Товары, СтруктураДействийОбработатьСтрокуЗаказа, Неопределено);

СтруктураПараметры = Новый Структура;
СтруктураПараметры.Вставить(""ПрименятьКОбъекту"", Истина);
СтруктураПараметры.Вставить(""ТолькоПредварительныйРасчет"", Ложь);
СтруктураПараметры.Вставить(""ВосстанавливатьУправляемыеСкидки"", Ложь);
СтруктураПараметры.Вставить(""УправляемыеСкидки"", Неопределено); //УправляемыеСкидки
СкидкиНаценкиСервер.Рассчитать(лОбъект, СтруктураПараметры);

лРезультат = ДоставкаТоваров.ПоследниеРеквизитыДоставкиИзЗаданий(лОбъект.Партнер);
Если лРезультат.Количество()>0 Тогда
	лОбъект.АдресДоставки = лРезультат[0].АдресДоставки;
	лОбъект.ЗонаДоставки = лРезультат[0].ЗонаДоставки;
КонецЕсли;

лОбъект.ЗаполнитьЭтапыГрафикаОплаты();"			
datetime	Дата		Дата и время документа									
printcode			Код объекта									
deleted	ПометкаУдаления		Пометка на удаление									
docstate		ref_docstates	Ссылка на статус состояния документа									
pricetype	*ВидЦены	ref_pricetypes	Ссылка на тип цены									
employee	Менеджер	ref_employees	Ссылка на сотрудника									
firm	Организация	ref_firms	Ссылка на собственную фирму									
store	Склад	ref_stores	Ссылка на склад									
buyer		ref_buyers	Ссылка на владельца / покупателя									
buypoint	Партнер	ref_buypoints	Ссылка на торговую точку									
counteragent	Контрагент	ref_counteragents	Ссылка на контрагента / юр. лицо / плательщика									
agreement	Соглашение	ref_agreements	Ссылка на договор					лПеременные.Вставить("Соглашение",лЗначение);				
paytype		ref_paytypes	Ссылка на тип оплаты									
deliverydate	ЖелаемаяДатаОтгрузки		Планируемая дата доставки									
deliverytimefrom			Временной интервал доставки, от									
deliverytimetill			Временной интервал доставки, до									
comment	Комментарий		Произвольный комментарий									
extrarate			Процент общей наценки / скидки на документ									
includevat	*ЦенаВключаетНДС		НДС включен в сумму									
usevat	*НалогообложениеНДС		Учитывать НДС					лПеременные.Вставить("УчитыватьНДС",?(лЗначение="true",Истина,Ложь));				
amount	СуммаДокумента		Сумма									
processed			Признак проведения документа									
status			Х									
												
Заявки (ТЧ)												
Мобиком	Источник	Ссылка	Описание		Запрос	Есть условие	Доп. при выгрузке	Доп. при загрузке				
deleted			Пометка на удаление		Товары	Х		"// строка ТЧ
стрТЧ.СтавкаНДС = стрТЧ.Номенклатура.СтавкаНДС; //Перечисления.СтавкиНДС.БезНДС
стрТЧ.Склад = лОбъект.Склад;
стрТЧ.Упаковка = ПолучитьЕдиницуТовара_11(стрТЧ, лПеременные.ЕдиницаПоКлассификатору, лПеременные.Коэффициент, ""11.2"");
стрТЧ.КоличествоУпаковок = стрТЧ.Количество/лПеременные.Коэффициент;
стрТЧ.ДатаОтгрузки = лОбъект.ЖелаемаяДатаОтгрузки;
стрТЧ.ВариантОбеспечения = Перечисления.ВариантыОбеспечения.Требуется;

//ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(стрТЧ, СтруктураДействийОбработатьСтрокуЗаказа, Неопределено);"				
sku	Номенклатура	ref_skus	Ссылка на товар									
unit	Упаковка	ref_units	Ссылка на единицу измерения					лПеременные.Вставить("ЕдиницаПоКлассификатору",XMLЗначение(Тип(элТЗЭ.Представление),лЗначение));				
pricetype	ВидЦены	ref_pricetypes	Ссылка на тип цены									
factor	КоличествоУпаковок		Коэффициент пересчета в базовую единицу измерения					лПеременные.Вставить("Коэффициент",Число(лЗначение));				
quantity	Количество		Количество в выбранной единице измерения									
extrarate			Процент наценки / скидки									
vatrate	*СтавкаНДС		Процент ставки НДС									
price	Цена		Цена за выбранную единицу измерения без учета скидок / наценок									
												
												
ПКО												
Мобиком	Источник	Ссылка	Описание		Запрос	Есть условие	Доп. при выгрузке	Доп. при загрузке	В конце загрузки док.			
					Х	Х		"// шапка
лОбъект.Валюта = Константы.ВалютаРегламентированногоУчета.Получить();
лОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента;
лОбъект.СтатьяДвиженияДенежныхСредств = Справочники.СтатьиДвиженияДенежныхСредств.ПоступлениеОплатыОтКлиента;
лОбъект.Касса = ПолучитьКассу(лОбъект.Организация);
лОбъект.ПринятоОт = ?(лОбъект.Контрагент=Неопределено,"""",?(ПустаяСтрока(лОбъект.Контрагент.НаименованиеПолное), лОбъект.Контрагент.Наименование, лОбъект.Контрагент.НаименованиеПолное));

//лОбъект.Касса = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(""ТекущаяКасса"",);
Если Не ЗначениеЗаполнено(лОбъект.Касса) Тогда
	лОбъект.Касса = Справочники.Кассы.ПолучитьКассуПоУмолчанию(
		?(ЗначениеЗаполнено(лОбъект.Организация), лОбъект.Организация, Неопределено),
		?(ЗначениеЗаполнено(лОбъект.Валюта), лОбъект.Валюта, Неопределено));
КонецЕсли;
Если ЗначениеЗаполнено(лОбъект.Касса) Тогда
	СтруктураРеквизитов = Справочники.Кассы.ПолучитьРеквизитыКассы(лОбъект.Касса);
	лОбъект.Организация = СтруктураРеквизитов.Организация;
	лОбъект.Валюта = СтруктураРеквизитов.Валюта;
КонецЕсли;

лОбъект.УстановитьВремя(РежимАвтоВремя.ТекущееИлиПоследним);
//лОбъект.УстановитьНовыйНомер(лОбъект.Организация.Префикс);"				
datetime	Дата		Дата и время документа									
printcode			Код объекта									
deleted	ПометкаУдаления		Пометка на удаление									
docstate		ref_docstates	Ссылка на статус состояния документа									
employee	*Ответственный	ref_employees	Ссылка на сотрудника									
firm	Организация	ref_firms	Ссылка на собственную фирму									
cashregister	*Касса	ref_cashregisters	Ссылка на кассу									
buyer		ref_buyers	Ссылка на владельца / покупателя									
buypoint		ref_buypoints	Ссылка на торговую точку									
counteragent	Контрагент	ref_counteragents	Ссылка на контрагента / юр. лицо / плательщика									
agreement	*Соглашение	ref_agreements	Ссылка на договор					лПеременные.Вставить("Соглашение",лЗначение);				
comment	Комментарий		Произвольный комментарий									
amount	СуммаДокумента		Сумма									
processed			Признак проведения документа									
												
ПКО (ТЧ)												
Мобиком	Источник	Ссылка	Описание		Запрос	Есть условие	Доп. при выгрузке	Доп. при загрузке				
deleted			Пометка на удаление		РасшифровкаПлатежа	Х		"// строка ТЧ
стрТЧ.СтатьяДвиженияДенежныхСредств = лОбъект.СтатьяДвиженияДенежныхСредств;
стрТЧ.ВалютаВзаиморасчетов = лОбъект.Валюта;
стрТЧ.СуммаВзаиморасчетов = стрТЧ.Сумма;

стрТЧ.ОснованиеПлатежа = ПолучитьОснованиеДляПКО(лПеременные.docinfo, лПеременные.invoice, ТипыЗначенийЭлементов);
//Если ЗначениеЗаполнено(стрТЧ.ДокументРасчетовСКонтрагентом) Тогда
//	стрТЧ.Сделка = стрТЧ.ДокументРасчетовСКонтрагентом.Сделка;
//КонецЕсли;"				
buypoint	Партнер	ref_buypoints	Ссылка на торговую точку									
firm		ref_firms	Ссылка на собственную фирму									
counteragent		ref_counteragents	Ссылка на контрагента / юр. лицо / плательщика									
agreement		ref_agreements	Ссылка на договор									
docinfo	ОснованиеПлатежа		Описание документа задолженности					лПеременные.Вставить("docinfo",лЗначение);				
invoice_guid	ОснованиеПлатежа	doc_invoices	Ссылка на документ задолженности					лПеременные.Вставить("invoice",лЗначение);				
amount	Сумма		Сумма задолженности									
												
												
Возвраты												
Мобиком	Источник	Ссылка	Описание		Запрос	Есть условие	Доп. при выгрузке	Доп. при загрузке	В конце загрузки док.			
					Х	Х		"// шапка
лОбъект.Соглашение = XMLЗначение(ТипЗнч(лОбъект.Соглашение),СтрПолучитьСтроку(СтрЗаменить(лПеременные.Соглашение,""***"",Символы.ПС),1));

лОбъект.Валюта = Константы.ВалютаРегламентированногоУчета.Получить();
лОбъект.Подразделение = лОбъект.Менеджер.Подразделение;

лПеременные.Вставить(""УчитыватьНДС"", Истина);
//лОбъект.ЦенаВключаетНДС = лОбъект.ВидЦены.ЦенаВключаетНДС;

лОбъект.НалогообложениеНДС	= ?(лПеременные.УчитыватьНДС, Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС, Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);

лОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровОтКлиента;
//лОбъект.ТипЦен = лОбъект.ДоговорКонтрагента.ТипЦен;

лОбъект.УстановитьВремя(РежимАвтоВремя.ТекущееИлиПоследним);
//лОбъект.УстановитьНовыйНомер(лОбъект.Организация.Префикс);

Если ЗначениеЗаполнено(лОбъект.Соглашение) Тогда
	лОбъект.ЗаполнитьУсловияПродажПоCоглашению();
ИначеЕсли ЗначениеЗаполнено(лОбъект.Партнер) Тогда
	УсловияПродажПоУмолчанию = ПродажиСервер.ПолучитьУсловияПродажПоУмолчанию(лОбъект.Партнер);
	Если УсловияПродажПоУмолчанию <> Неопределено И НЕ УсловияПродажПоУмолчанию.Соглашение.Пустая() Тогда
		лОбъект.Соглашение = УсловияПродажПоУмолчанию.Соглашение;
		лОбъект.ЗаполнитьУсловияПродаж(УсловияПродажПоУмолчанию);
		//ПродажиСервер.ЗаполнитьЦеныПоСоглашению(лОбъект, ""Товары"", Истина);
	КонецЕсли;
КонецЕсли;

СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруПересчетаСуммыНДСВСтрокеТЧ(лОбъект);

СтруктураДействийОбработатьСтрокуВозврата.Вставить(""ПересчитатьКоличествоЕдиниц"");
СтруктураДействийОбработатьСтрокуВозврата.Вставить(""ЗаполнитьСтавкуНДС"", лОбъект.НалогообложениеНДС);
СтруктураДействийОбработатьСтрокуВозврата.Вставить(""ПересчитатьСумму"");
СтруктураДействийОбработатьСтрокуВозврата.Вставить(""ПересчитатьСуммуНДС"", СтруктураПересчетаСуммы);
СтруктураДействийОбработатьСтрокуВозврата.Вставить(""ПересчитатьСуммуCНДС"", СтруктураПересчетаСуммы);"	"// финиш
//ПродажиСервер.ЗаполнитьРеализацииИЦены(лОбъект, ""Товары"");

ОбработкаТабличнойЧастиСервер.ОбработатьТЧ(лОбъект.Товары, СтруктураДействийОбработатьСтрокуВозврата, неопределено);"			
datetime	Дата		Дата и время документа									
printcode			Код объекта									
deleted	ПометкаУдаления		Пометка на удаление									
docstate		ref_docstates	Ссылка на статус состояния документа									
pricetype	*ТипЦен	ref_pricetypes	Ссылка на тип цены									
employee	Менеджер	ref_employees	Ссылка на сотрудника									
firm	Организация	ref_firms	Ссылка на собственную фирму									
store	Склад	ref_stores	Ссылка на склад									
buyer		ref_buyers	Ссылка на владельца / покупателя									
buypoint	Партнер	ref_buypoints	Ссылка на торговую точку									
counteragent	Контрагент	ref_counteragents	Ссылка на контрагента / юр. лицо / плательщика									
agreement	Соглашение	ref_agreements	Ссылка на договор					лПеременные.Вставить("Соглашение",лЗначение);				
paytype		ref_paytypes	Ссылка на тип оплаты									
deliverydate			Планируемая дата доставки									
deliverytimefrom			Временной интервал доставки, от									
deliverytimetill			Временной интервал доставки, до									
comment	Комментарий		Произвольный комментарий									
extrarate			Процент общей наценки / скидки на документ									
includevat	*ЦенаВключаетНДС		НДС включен в сумму									
usevat	*НалогообложениеНДС		Учитывать НДС					лПеременные.Вставить("УчитыватьНДС",?(лЗначение="true",Истина,Ложь));				
amount	СуммаДокумента		Сумма									
processed			Признак проведения документа									
												
Возвраты (ТЧ)												
Мобиком	Источник	Ссылка	Описание		Запрос	Есть условие	Доп. при выгрузке	Доп. при загрузке				
deleted			Пометка на удаление		Товары	Х		"// строка ТЧ
стрТЧ.СтавкаНДС = стрТЧ.Номенклатура.СтавкаНДС; //Перечисления.СтавкиНДС.БезНДС
стрТЧ.Упаковка = ПолучитьЕдиницуТовара_11(стрТЧ, лПеременные.ЕдиницаПоКлассификатору, лПеременные.Коэффициент, ""11.2"");
стрТЧ.КоличествоУпаковок = стрТЧ.Количество/лПеременные.Коэффициент;"				
sku	Номенклатура	ref_skus	Ссылка на товар									
unit	Упаковка	ref_units	Ссылка на единицу измерения					лПеременные.Вставить("ЕдиницаПоКлассификатору",XMLЗначение(Тип(элТЗЭ.Представление),лЗначение));				
pricetype		ref_pricetypes	Ссылка на тип цены									
factor	КоличествоУпаковок		Коэффициент пересчета в базовую единицу измерения					лПеременные.Вставить("Коэффициент",Число(лЗначение));				
quantity	Количество		Количество в выбранной единице измерения									
extrarate			Процент наценки / скидки									
vatrate	*СтавкаНДС		Процент ставки НДС									
price	Цена		Цена за выбранную единицу измерения без учета скидок / наценок									
overdue			Товар просрочен									
												
												
Перепись (сенсус) владельцев торговых точек												
Мобиком	Источник	Ссылка	Описание		Запрос	Есть условие	Доп. при выгрузке	Доп. при загрузке				
					Х	Х		"// заполнение данных
//лОбъект.Комментарий = """"+ лПеременные.employee +"" # ""+ лПеременные.comment;

лСенсус = Неопределено;
лКонстанты.Свойство(""Сенсус"",лСенсус);
Если лСенсус=Неопределено Тогда
	лСенсус = Новый ТаблицаЗначений;
	лСенсус.Колонки.Добавить(""buyer"");
	лСенсус.Колонки.Добавить(""Ссылка"");
КонецЕсли;

элТЗЭ = ТипыЗначенийЭлементов.НайтиПоЗначению(""ref_buyers"");
Если ЗначениеЗаполнено(лПеременные.buyer_did) Тогда
	лОбъектСсылка = XMLЗначение(Тип(элТЗЭ.Представление),лПеременные.buyer_did);
	лОбъект = лОбъектСсылка.ПолучитьОбъект();
	СообщитьПодробно(""Обновляем объект ""+лОбъект+"" (""+лПеременные.buyer+"")"", СтатусСообщения.Обычное, Истина, ЗаписьВЖурнал);
Иначе
	стрТПО = ТаблицаПринятыхОбъектов.Найти(лПеременные.buyer, ""did"");
	Если стрТПО=Неопределено Тогда
		лОбъектСсылка = Справочники.Контрагенты.ПолучитьСсылку();
		лОбъект.УстановитьСсылкуНового(лОбъектСсылка);
	Иначе
		лОбъектСсылка = XMLЗначение(Тип(элТЗЭ.Представление), стрТПО.sid);
		лОбъект = лОбъектСсылка.ПолучитьОбъект();
		СообщитьПодробно(""Обновляем объект ""+лОбъект+"" (""+стрТПО.sid+"")"", СтатусСообщения.Обычное, Истина, ЗаписьВЖурнал);
	КонецЕсли;
КонецЕсли;

лОбъект.Наименование = ""#""+лПеременные.name;
лОбъект.ДополнительнаяИнформация = 
	""Адрес: ""+лПеременные.address+Символы.ПС+
	""Телефон: ""+лПеременные.phone+Символы.ПС+
	""Контактное лицо: ""+лПеременные.contact+Символы.ПС+
	""Комментарий: ""+лПеременные.employee+"" # ""+лПеременные.comment;
лОбъект.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо;
лОбъект.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо;

Попытка
//	лОбъект.Записать();
//	лОбъектСсылка = лОбъект.Ссылка;

	лСтрСенсус = лСенсус.Добавить();
	лСтрСенсус.buyer = лПеременные.buyer;
	лСтрСенсус.Ссылка =лОбъектСсылка;

	лКонстанты.Вставить(""Сенсус"",лСенсус);

	ДополнительноеПодтверждение(лКонстанты, ""ref_buyers"", лОбъектСсылка, лПеременные.buyer, ТаблицаПринятыхОбъектов);
Исключение
	СообщитьПодробно(ОписаниеОшибки(), СтатусСообщения.Внимание, Истина, ЗаписьВЖурнал);
КонецПопытки;"				
name	Наименование		Наименование					лПеременные.Вставить("name",лЗначение);				
printcode	*Код		Код объекта									
deleted	*ПометкаУдаления		Пометка на удаление									
store		ref_stores	Ссылка на склад отгрузки									
pricetype	*ТипЦен	ref_pricetypes	Ссылка на тип цен									
address	Наименование		Адрес					лПеременные.Вставить("address",лЗначение);				
phone	Наименование		Телефон					лПеременные.Вставить("phone",лЗначение);				
contact	Наименование		Контактное лицо					лПеременные.Вставить("contact",лЗначение);				
canexceedlimit	*КонтролироватьЧислоДнейЗадолженности		Признак разрешения превышать срок кредита									
creditlimit	*ДопустимаяСуммаЗадолженности		Ограничение суммы кредита в основной валюте									
creditdeadline	*ДопустимоеЧислоДнейЗадолженности		Ограничение глубины кредита в днях									
maxorderamount			Ограничение максимальной сумма заказа									
minorderamount			Ограничение минимальной сумма заказа									
maxdiscount			Ограничение максимального процента скидки									
mindiscount			Ограничение минимального процента скидки									
censusapproved												
buyer	Наименование	ref_buyers						лПеременные.Вставить("buyer",tag.firstChild.getAttribute("sid")); лПеременные.Вставить("buyer_did",tag.firstChild.getAttribute("did"));				
comment	Наименование							лПеременные.Вставить("comment",лЗначение);				
employee	Наименование	ref_employees						лПеременные.Вставить("employee",XMLЗначение(Тип(элТЗЭ.Представление),лЗначение));				
												
												
Сенсус (перепись) торговых точек												
Мобиком	Источник	Ссылка	Описание		Запрос	Есть условие	Доп. при выгрузке	Доп. при загрузке				
					Х	Х		"// заполнение данных
лСенсус = Неопределено;
лКонстанты.Свойство(""Сенсус"",лСенсус);
Если лСенсус=Неопределено Тогда
	лСенсус = Новый ТаблицаЗначений;
	лСенсус.Колонки.Добавить(""buyer"");
	лСенсус.Колонки.Добавить(""Ссылка"");
КонецЕсли;

элТЗЭ = ТипыЗначенийЭлементов.НайтиПоЗначению(""ref_buypoints"");
Если ЗначениеЗаполнено(лПеременные.buypoint_did) Тогда
	лОбъектСсылка = XMLЗначение(Тип(элТЗЭ.Представление),лПеременные.buypoint_did);
	лОбъект = лОбъектСсылка.ПолучитьОбъект();
	СообщитьПодробно(""Обновляем объект ""+лОбъект+"" (""+лПеременные.buypoint+"")"", СтатусСообщения.Обычное, Истина, ЗаписьВЖурнал);
	лОбъект.Наименование = лПеременные.name;
Иначе
	стрТПО = ТаблицаПринятыхОбъектов.Найти(лПеременные.buypoint, ""did"");
	Если стрТПО=Неопределено Тогда
		лОбъектСсылка = Справочники.Партнеры.ПолучитьСсылку();
		лОбъект.УстановитьСсылкуНового(лОбъектСсылка);
	Иначе
		лОбъектСсылка = XMLЗначение(Тип(элТЗЭ.Представление), стрТПО.sid);
		лОбъект = лОбъектСсылка.ПолучитьОбъект();
		СообщитьПодробно(""Обновляем объект ""+лОбъект+"" (""+стрТПО.sid+"")"", СтатусСообщения.Обычное, Истина, ЗаписьВЖурнал);
	КонецЕсли;
	лОбъект.Наименование = ""#""+лПеременные.name;
КонецЕсли;

Если лПеременные.Свойство(""buyer"") Тогда
	Если ЗначениеЗаполнено(лПеременные.buyer_did) Тогда
		элТЗЭ = ТипыЗначенийЭлементов.НайтиПоЗначению(""ref_buyers"");
		лГлавныйКонтрагент = XMLЗначение(Тип(элТЗЭ.Представление),лПеременные.buyer_did);
	Иначе
		стрСенсус = лСенсус.Найти(лПеременные.buyer,""buyer"");
		Если стрСенсус=Неопределено Тогда
			лГлавныйКонтрагент = Неопределено;
		Иначе
			лГлавныйКонтрагент = стрСенсус.Ссылка;
			//лСенсус.Удалить(стрСенсус); // иначе если несколько новых точек заведены на одного нового владельца - нужна обработка иерархии
		КонецЕсли;
	КонецЕсли;
Иначе
	лГлавныйКонтрагентОбъект = Справочники.Контрагенты.СоздатьЭлемент();
	лГлавныйКонтрагентОбъект.Наименование = ""#""+лПеременные.name;
	лГлавныйКонтрагентОбъект.НаименованиеПолное = лПеременные.fullname;
	лГлавныйКонтрагентОбъект.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо;
	//лГлавныйКонтрагентОбъект.Партнер = лОбъектСсылка;
	лГлавныйКонтрагентОбъект.Записать();
	СообщитьПодробно(""Создали контрагента для ТТ (""+лПеременные.buypoint+"")"", СтатусСообщения.Обычное, Истина, ЗаписьВЖурнал);

	лГлавныйКонтрагент = лГлавныйКонтрагентОбъект.Ссылка;
КонецЕсли;
Если лГлавныйКонтрагент<>Неопределено Тогда
	лПартнерРодитель = лГлавныйКонтрагент.Партнер;
	лКонтрагентОбъект = лГлавныйКонтрагент.ПолучитьОбъект();
	Если ЗначениеЗаполнено(лПартнерРодитель) Тогда
		Если НЕ лПартнерРодитель=лОбъект.Ссылка Тогда
			лОбъект.Родитель = лПартнерРодитель;
		КонецЕсли;
	Иначе
		лКонтрагентОбъект.Партнер = лОбъектСсылка;
		лКонтрагентОбъект.Записать();
	КонецЕсли;
КонецЕсли;

//лОбъект.Наименование = ""#""+лПеременные.name;
лОбъект.НаименованиеПолное = лПеременные.fullname;
лОбъект.Комментарий = """"+ лПеременные.employee +"" # ""+ лПеременные.comment;
лОбъект.ОсновнойМенеджер = лПеременные.employee;

лОбъект.ДополнительнаяИнформация = 
	""Адрес: ""+лПеременные.address+Символы.ПС+
	""Телефон: ""+лПеременные.phone+Символы.ПС+
	""Контактное лицо: ""+лПеременные.contact;

лКонтрагентИзменен = Ложь;
Если ЗначениеЗаполнено(лПеременные.address) Тогда
	стрДИ = лОбъект.КонтактнаяИнформация.Найти(Перечисления.ТипыКонтактнойИнформации.Адрес, ""Тип"");
	Если стрДИ=Неопределено Тогда
		стрДИ = лОбъект.КонтактнаяИнформация.Добавить();
		стрДИ.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес;
		стрДИ.Вид = Справочники.ВидыКонтактнойИнформации.АдресПартнера;
	КонецЕсли;
	стрДИ.Страна = ""РОССИЯ"";
	стрДИ.Регион = """";
	стрДИ.Город = """";
	стрДИ.Представление = лПеременные.address;
	стрДИ.ЗначенияПолей = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияВXML("""", стрДИ.Представление, стрДИ.Вид);
	
	Если лКонтрагентОбъект<>Неопределено Тогда
		стрДИ = лКонтрагентОбъект.КонтактнаяИнформация.Найти(Перечисления.ТипыКонтактнойИнформации.Адрес, ""Тип"");
		Если стрДИ=Неопределено Тогда
			стрДИ = лКонтрагентОбъект.КонтактнаяИнформация.Добавить();
			стрДИ.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес;
			стрДИ.Вид = Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента;
		КонецЕсли;
		стрДИ.Страна = ""РОССИЯ"";
		стрДИ.Регион = """";
		стрДИ.Город = """";
		стрДИ.Представление = лПеременные.address;
		стрДИ.ЗначенияПолей = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияВXML("""", стрДИ.Представление, стрДИ.Вид);
		
		лКонтрагентИзменен = Истина;
	КонецЕсли;
КонецЕсли;
Если ЗначениеЗаполнено(лПеременные.phone) Тогда
	стрДИ = лОбъект.КонтактнаяИнформация.Найти(Перечисления.ТипыКонтактнойИнформации.Телефон, ""Тип"");
	Если стрДИ=Неопределено Тогда
		стрДИ = лОбъект.КонтактнаяИнформация.Добавить();
		стрДИ.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон;
		стрДИ.Вид = Справочники.ВидыКонтактнойИнформации.ТелефонПартнера;
	КонецЕсли;
	стрДИ.НомерТелефона = """";
	стрДИ.НомерТелефонаБезКодов = """";
	стрДИ.Представление = лПеременные.phone;
	стрДИ.ЗначенияПолей = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияВXML("""", стрДИ.Представление, стрДИ.Вид);
	
	Если лКонтрагентОбъект<>Неопределено Тогда
		стрДИ = лКонтрагентОбъект.КонтактнаяИнформация.Найти(Перечисления.ТипыКонтактнойИнформации.Телефон, ""Тип"");
		Если стрДИ=Неопределено Тогда
			стрДИ = лКонтрагентОбъект.КонтактнаяИнформация.Добавить();
			стрДИ.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон;
			стрДИ.Вид = Справочники.ВидыКонтактнойИнформации.ТелефонКонтрагента;
		КонецЕсли;
		стрДИ.НомерТелефона = """";
		стрДИ.НомерТелефонаБезКодов = """";
		стрДИ.Представление = лПеременные.phone;
		стрДИ.ЗначенияПолей = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияВXML("""", стрДИ.Представление, стрДИ.Вид);
		
		лКонтрагентИзменен = Истина;
	КонецЕсли;
КонецЕсли;

Если лКонтрагентИзменен Тогда
	лКонтрагентОбъект.Записать();
КонецЕсли;

лОбъект.Клиент = Истина;
лОбъект.ЮрФизЛицо = Перечисления.КомпанияЧастноеЛицо.Компания;
//лОбъект.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо;
//лОбъект.ДатаРегистрации = ТекущаяДата();

ДополнительноеПодтверждение(лКонстанты, ""ref_buypoints"", лОбъектСсылка, лПеременные.buypoint, ТаблицаПринятыхОбъектов);"				
name	Наименование		Наименование					лПеременные.Вставить("name",лЗначение);				
printcode	*Код		Код объекта									
deleted	*ПометкаУдаления		Пометка на удаление									
buyer	Комментарий	ref_buyers	Ссылка на владельца / покупателя					лПеременные.Вставить("buyer",tag.firstChild.getAttribute("sid")); лПеременные.Вставить("buyer_did",tag.firstChild.getAttribute("did"));				
store		ref_stores	Ссылка на склад отгрузки									
pricetype	*ТипЦен	ref_pricetypes	Ссылка на тип цен									
buypointtype	Родитель	ref_buypointtypes	Ссылка на тип торговой точки									
fullname	НаименованиеПолное		Полное наименование					лПеременные.Вставить("fullname",лЗначение);				
address	Комментарий		Адрес					лПеременные.Вставить("address",лЗначение);				
phone	Комментарий		Телефон					лПеременные.Вставить("phone",лЗначение);				
contact	Комментарий		Контактное лицо					лПеременные.Вставить("contact",лЗначение);				
vatstatus			Плательщик НДС									
canexceedlimit	*КонтролироватьЧислоДнейЗадолженности		Признак разрешения превышать срок кредита									
creditlimit	*ДопустимаяСуммаЗадолженности		Ограничение суммы кредита в основной валюте									
creditdeadline	*ДопустимоеЧислоДнейЗадолженности		Ограничение глубины кредита в днях									
maxorderamount			Ограничение максимальной сумма заказа									
minorderamount			Ограничение минимальной сумма заказа									
maxdiscount			Ограничение максимального процента скидки									
mindiscount			Ограничение минимального процента скидки									
extrarate			Процент наценки / скидки									
censusapproved												
buypoint	Комментарий	ref_buypoints						лПеременные.Вставить("buypoint",tag.firstChild.getAttribute("sid")); лПеременные.Вставить("buypoint_did",tag.firstChild.getAttribute("did"));				
comment	Комментарий							лПеременные.Вставить("comment",лЗначение);				
employee	Комментарий	ref_employees						лПеременные.Вставить("employee",XMLЗначение(Тип(элТЗЭ.Представление),лЗначение));				
												
												
Скидки												
Мобиком	Источник	Ссылка	Описание		Запрос	Есть условие	Доп. при выгрузке	Доп. при загрузке				
deleted			Пометка на удаление		"ВЫБРАТЬ
	СкидкиНаценки.Ссылка КАК СкидкаСсылка,
	СкидкиНаценки.ЗначениеСкидкиНаценки КАК ПроцентСкидки,
	ДОБАВИТЬКДАТЕ(&ДатаФормирования, МЕСЯЦ, -1) КАК ДатаНачала,
	ДОБАВИТЬКДАТЕ(&ДатаФормирования, МЕСЯЦ, 1) КАК ДатаОкончания,
	2 КАК ТипСкидки,
	0 КАК Условие,
	0 КАК ЗначениеУсловия,
	0 КАК ОграничениеСкидкиНаценки,
	СоглашенияСКлиентамиСкидкиНаценки.Ссылка КАК ПолучательСкидки,
	NULL КАК Номенклатура
ИЗ
	Справочник.СоглашенияСКлиентами.СкидкиНаценки КАК СоглашенияСКлиентамиСкидкиНаценки
		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СкидкиНаценки КАК СкидкиНаценки
		ПО (СоглашенияСКлиентамиСкидкиНаценки.СкидкаНаценка = СкидкиНаценки.Ссылка)
ГДЕ
	СкидкиНаценки.Управляемая = ЛОЖЬ
	И НЕ СкидкиНаценки.УсловияПредоставления.НомерСтроки В (1)
	И СкидкиНаценки.Родитель = ЗНАЧЕНИЕ(Справочник.СкидкиНаценки.ПустаяСсылка)
	И СкидкиНаценки.СпособПримененияСкидки = ЗНАЧЕНИЕ(Перечисление.СпособыПримененияСкидокНаценок.ПрименитьВМоментРасчетаСкидокНаценок)
	И СкидкиНаценки.СпособПредоставления = ЗНАЧЕНИЕ(Перечисление.СпособыПредоставленияСкидокНаценок.Процент)
	И СоглашенияСКлиентамиСкидкиНаценки.Ссылка В(&Отбор_ref_agreements)

ОБЪЕДИНИТЬ

ВЫБРАТЬ
	СкидкиНаценки.Ссылка,
	СкидкиНаценки.ЗначениеСкидкиНаценки,
	ДОБАВИТЬКДАТЕ(&ДатаФормирования, МЕСЯЦ, -1),
	ДОБАВИТЬКДАТЕ(&ДатаФормирования, МЕСЯЦ, 1),
	2,
	ВЫБОР
		КОГДА СкидкиНаценкиУсловияПредоставления.УсловиеПредоставления.КритерийОграниченияПримененияЗаОбъемПродаж = ЗНАЧЕНИЕ(Перечисление.КритерииОграниченияПримененияСкидкиНаценкиЗаОбъемПродаж.Сумма)
			ТОГДА 1
		КОГДА СкидкиНаценкиУсловияПредоставления.УсловиеПредоставления.КритерийОграниченияПримененияЗаОбъемПродаж = ЗНАЧЕНИЕ(Перечисление.КритерииОграниченияПримененияСкидкиНаценкиЗаОбъемПродаж.Количество)
			ТОГДА 0
		ИНАЧЕ 2
	КОНЕЦ,
	СкидкиНаценкиУсловияПредоставления.УсловиеПредоставления.ЗначениеУсловияОграничения,
	0,
	СоглашенияСКлиентамиСкидкиНаценки.Ссылка,
	НоменклатураСегмента.Номенклатура
ИЗ
	Справочник.СоглашенияСКлиентами.СкидкиНаценки КАК СоглашенияСКлиентамиСкидкиНаценки
		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СкидкиНаценки КАК СкидкиНаценки
			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СкидкиНаценки.УсловияПредоставления КАК СкидкиНаценкиУсловияПредоставления
				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураСегмента КАК НоменклатураСегмента
				ПО СкидкиНаценкиУсловияПредоставления.УсловиеПредоставления.СегментНоменклатурыОграничения = НоменклатураСегмента.Сегмент
			ПО СкидкиНаценки.Ссылка = СкидкиНаценкиУсловияПредоставления.Ссылка
		ПО СоглашенияСКлиентамиСкидкиНаценки.СкидкаНаценка = СкидкиНаценки.Ссылка
ГДЕ
	СкидкиНаценки.Управляемая = ЛОЖЬ
	И СкидкиНаценки.УсловияПредоставления.НомерСтроки В (1)
	И НЕ СкидкиНаценки.УсловияПредоставления.НомерСтроки В (2)
	И СкидкиНаценки.Родитель = ЗНАЧЕНИЕ(Справочник.СкидкиНаценки.ПустаяСсылка)
	И СкидкиНаценки.СпособПримененияСкидки = ЗНАЧЕНИЕ(Перечисление.СпособыПримененияСкидокНаценок.ПрименитьВМоментРасчетаСкидокНаценок)
	И СкидкиНаценки.СпособПредоставления = ЗНАЧЕНИЕ(Перечисление.СпособыПредоставленияСкидокНаценок.Процент)
	И СоглашенияСКлиентамиСкидкиНаценки.Ссылка В(&Отбор_ref_agreements)
	И НоменклатураСегмента.Номенклатура В(&Отбор_ref_skus)
	И СкидкиНаценки.УсловияПредоставления.УсловиеПредоставления.УсловиеПредоставления = ЗНАЧЕНИЕ(Перечисление.УсловияПредоставленияСкидокНаценок.ЗаРазовыйОбъемПродаж)
	И СкидкиНаценки.УсловияПредоставления.УсловиеПредоставления.ОбластьОграничения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбластейОграниченияСкидокНаценок.ВСтроке)
	И СкидкиНаценки.УсловияПредоставления.УсловиеПредоставления.ТипСравнения = ЗНАЧЕНИЕ(Перечисление.ТипыСравненияЗначенийСкидокНаценок.НеМенее)

ОБЪЕДИНИТЬ

ВЫБРАТЬ
	ДействиеСкидокНаценок.СкидкаНаценка,
	ДействиеСкидокНаценок.СкидкаНаценка.ЗначениеСкидкиНаценки,
	ДействиеСкидокНаценок.Период,
	ВЫБОР
		КОГДА ДействиеСкидокНаценок.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1)
			ТОГДА ДОБАВИТЬКДАТЕ(&ДатаФормирования, МЕСЯЦ, 1)
		ИНАЧЕ ДействиеСкидокНаценок.ДатаОкончания
	КОНЕЦ,
	0,
	ВЫБОР
		КОГДА СкидкиНаценкиУсловияПредоставления.УсловиеПредоставления.КритерийОграниченияПримененияЗаОбъемПродаж = ЗНАЧЕНИЕ(Перечисление.КритерииОграниченияПримененияСкидкиНаценкиЗаОбъемПродаж.Сумма)
			ТОГДА 1
		КОГДА СкидкиНаценкиУсловияПредоставления.УсловиеПредоставления.КритерийОграниченияПримененияЗаОбъемПродаж = ЗНАЧЕНИЕ(Перечисление.КритерииОграниченияПримененияСкидкиНаценкиЗаОбъемПродаж.Количество)
			ТОГДА 0
		ИНАЧЕ 2
	КОНЕЦ,
	СкидкиНаценкиУсловияПредоставления.УсловиеПредоставления.ЗначениеУсловияОграничения,
	0,
	ПартнерыСегмента.Партнер,
	НоменклатураСегмента.Номенклатура
ИЗ
	РегистрСведений.ДействиеСкидокНаценок КАК ДействиеСкидокНаценок
		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПартнерыСегмента КАК ПартнерыСегмента
		ПО (ДействиеСкидокНаценок.СегментПартнеров = ПартнерыСегмента.Сегмент)
		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СкидкиНаценки.УсловияПредоставления КАК СкидкиНаценкиУсловияПредоставления
			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураСегмента КАК НоменклатураСегмента
			ПО (СкидкиНаценкиУсловияПредоставления.УсловиеПредоставления.СегментНоменклатурыОграничения = НоменклатураСегмента.Сегмент)
		ПО (ДействиеСкидокНаценок.СкидкаНаценка = СкидкиНаценкиУсловияПредоставления.Ссылка)
ГДЕ
	ДействиеСкидокНаценок.Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	И ДействиеСкидокНаценок.СкидкаНаценка.Управляемая = ЛОЖЬ
	И ДействиеСкидокНаценок.СкидкаНаценка.УсловияПредоставления.НомерСтроки В (1)
	И НЕ ДействиеСкидокНаценок.СкидкаНаценка.УсловияПредоставления.НомерСтроки В (2)
	И ДействиеСкидокНаценок.СкидкаНаценка.Родитель = ЗНАЧЕНИЕ(Справочник.СкидкиНаценки.ПустаяСсылка)
	И ДействиеСкидокНаценок.СкидкаНаценка.СпособПримененияСкидки = ЗНАЧЕНИЕ(Перечисление.СпособыПримененияСкидокНаценок.ПрименитьВМоментРасчетаСкидокНаценок)
	И ДействиеСкидокНаценок.СкидкаНаценка.СпособПредоставления = ЗНАЧЕНИЕ(Перечисление.СпособыПредоставленияСкидокНаценок.Процент)
	И (ПартнерыСегмента.Партнер В(&Отбор_ref_buypoints) ИЛИ ПартнерыСегмента.Партнер ЕСТЬ NULL)
	И НоменклатураСегмента.Номенклатура В(&Отбор_ref_skus)
	И ДействиеСкидокНаценок.СкидкаНаценка.УсловияПредоставления.УсловиеПредоставления.УсловиеПредоставления = ЗНАЧЕНИЕ(Перечисление.УсловияПредоставленияСкидокНаценок.ЗаРазовыйОбъемПродаж)
	И ДействиеСкидокНаценок.СкидкаНаценка.УсловияПредоставления.УсловиеПредоставления.ОбластьОграничения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбластейОграниченияСкидокНаценок.ВСтроке)
	И ДействиеСкидокНаценок.СкидкаНаценка.УсловияПредоставления.УсловиеПредоставления.ТипСравнения = ЗНАЧЕНИЕ(Перечисление.ТипыСравненияЗначенийСкидокНаценок.НеМенее)"	1	"// заполняем подборы
лОбъекты.Колонки.Добавить(""ПоДоговорам"");
лОбъекты.Колонки.Добавить(""ПоВладельцам"");
лОбъекты.Колонки.Добавить(""ПоТочкам"");
лОбъекты.Колонки.Добавить(""ПоТипамТочек"");
лОбъекты.Колонки.Добавить(""Ссылка"");

лТЗ_ПоДоговорам=Новый ТаблицаЗначений;
лТЗ_ПоДоговорам.Колонки.Добавить(""Сотрудник""); // employee
лТЗ_ПоДоговорам.Колонки.Добавить(""Элемент""); // item
лТЗ_ПоДоговорам.Колонки.Добавить(""Номенклатура""); // sku

лТЗ_ПоВладельцам = лТЗ_ПоДоговорам.Скопировать();
лТЗ_ПоТочкам = лТЗ_ПоДоговорам.Скопировать();
лТЗ_ПоТипамТочек = лТЗ_ПоДоговорам.Скопировать();

Для Каждого стрДоп Из лОбъекты Цикл
	лТЗ_ПоДоговорам.Очистить();
	лТЗ_ПоВладельцам.Очистить();
	лТЗ_ПоТочкам.Очистить();
	//лТЗ_ПоТипамТочек.Очистить();
	
	Если НЕ ЗначениеЗаполнено(стрДоп.ПолучательСкидки) Тогда
		стрТЗ = лТЗ_ПоВладельцам.Добавить();
		стрТЗ.Номенклатура = стрДоп.Номенклатура;
		стрДоп.ТипСкидки = 3;
	ИначеЕсли стрДоп.ТипСкидки=0 Тогда // ПоТочкам
		стрТЗ = лТЗ_ПоТочкам.Добавить();
		стрТЗ.Элемент = стрДоп.ПолучательСкидки;
		стрТЗ.Номенклатура = стрДоп.Номенклатура;
	ИначеЕсли стрДоп.ТипСкидки=2 Тогда // ПоДоговорам
		мстрДП = лКонстанты.ДоговорПартнер.НайтиСтроки(Новый Структура(""Соглашение"",стрДоп.ПолучательСкидки));
		Для Каждого стрДП Из мстрДП Цикл
			стрТЗ = лТЗ_ПоДоговорам.Добавить();
			стрТЗ.Элемент = стрДП.Ссылка;
			стрТЗ.Номенклатура = стрДоп.Номенклатура;
		КонецЦикла;
	ИначеЕсли стрДоп.ТипСкидки=3 Тогда // ПоВладельцам
		стрТЗ = лТЗ_ПоВладельцам.Добавить();
		стрТЗ.Элемент = стрДоп.ПолучательСкидки;
		стрТЗ.Номенклатура = стрДоп.Номенклатура;
	КонецЕсли;
	
	стрДоп.ПоДоговорам = лТЗ_ПоДоговорам.Скопировать();
	стрДоп.ПоВладельцам = лТЗ_ПоВладельцам.Скопировать();
	стрДоп.ПоТочкам = лТЗ_ПоТочкам.Скопировать();
	стрДоп.ПоТипамТочек = лТЗ_ПоТипамТочек.Скопировать();

	стрДоп.Ссылка = XMLСтрока(стрДоп.Номенклатура)+""*""+стрДоп.Условие+""*""+стрДоп.ЗначениеУсловия+""*""+XMLСтрока(стрДоп.ПолучательСкидки);
КонецЦикла;"					
itemtype	ТипСкидки		Тип объекта скидки (0 - ТТ, 1 - тип ТТ, 2 - Договор, 3 - Владелец)									
datestart	ДатаНачала		Дата начала действия скидки									
dateend	ДатаОкончания		Дата окончания действия скидки									
conditiontype	Условие		Тип условия скидки (0 - количество, 1 - сумма, 2 - не определено)									
conditionvalue	ЗначениеУсловия		Значение условия скидки									
discountrate	ПроцентСкидки		Процент скидки									
extrarate			Процент наценки									
discountlimit	ОграничениеСкидкиНаценки		Максимальное ограничение суммы скидки									
currencytype			Тип валюты									
priority			Приоритет									
	#	ref_skus			ПАРАМЕТР							
	#	ref_agreements			ПАРАМЕТР							
	*#	ref_buyers			ПАРАМЕТР							
	#	ref_buypoints			ПАРАМЕТР							
	*#	ref_buypointtypes			ПАРАМЕТР							
												
												
Подбор договоров под скидку												
Мобиком	Источник	Ссылка	Описание		Запрос	Есть условие	Доп. при выгрузке	Доп. при загрузке				
deleted			Пометка на удаление		ПоДоговорам	Х						
discount	*ставится от родителя	ref_discounts	Ссылка на скидку									
employee	*Сотрудник	*ref_employees	Ссылка на сотрудника									
item	Элемент	*ref_agreements	Ссылка на договор									
sku	Номенклатура	*ref_skus	Ссылка на товар									
skuclassifier			Ссылка на классификатор									
												
												
Подбор владельцев под скидку												
Мобиком	Источник	Ссылка	Описание		Запрос	Есть условие	Доп. при выгрузке	Доп. при загрузке				
deleted			Пометка на удаление		ПоВладельцам	Х						
discount	*ставится от родителя	ref_discounts	Ссылка на скидку									
employee	*Сотрудник	*ref_employees	Ссылка на сотрудника									
item	Элемент	*ref_buyers	Ссылка на владельца									
classifier			Ссылка на классификатор									
sku	Номенклатура	*ref_skus	Ссылка на товар									
skuclassifier			Ссылка на классификатор									
												
												
Подбор торговых точек под скидку												
Мобиком	Источник	Ссылка	Описание		Запрос	Есть условие	Доп. при выгрузке	Доп. при загрузке				
deleted			Пометка на удаление		ПоТочкам	Х						
discount	*ставится от родителя	ref_discounts	Ссылка на скидку									
employee	*Сотрудник	*ref_employees	Ссылка на сотрудника									
item	Элемент	*ref_buypoints	Ссылка на ТТ									
classifier			Ссылка на классификатор									
sku	Номенклатура	*ref_skus	Ссылка на товар									
skuclassifier			Ссылка на классификатор									
												
												
Подбор типов торговых точек под скидку												
Мобиком	Источник	Ссылка	Описание		Запрос	Есть условие	Доп. при выгрузке	Доп. при загрузке				
deleted			Пометка на удаление		ПоТипамТочек	Х						
discount	*ставится от родителя	ref_discounts	Ссылка на скидку									
employee	*Сотрудник	*ref_employees	Ссылка на сотрудника									
item	Элемент	*ref_buypointtypes	Ссылка на тип ТТ									
classifier			Ссылка на классификатор									
sku	Номенклатура	*ref_skus	Ссылка на товар									
skuclassifier			Ссылка на классификатор									